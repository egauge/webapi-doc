openapi: 3.1.0
info:
  version: 4.4.1
  title: eGauge WebAPI
  description: eGauge Meter API
servers:
  - url: https://{devname}.egauge.io/api
    description: The WebAPI server
    variables:
      devname:
        default: eGaugeHQ
paths:
  /auth/login:
    post:
      summary: /auth/login
      operationId: authLoginPost
      description: |-
        When accessing a protected resource, a valid JWT needs to be supplied as the bearer token in the HTTP Authorization header [RFC-7519](https://rfc-editor.org/rfc/rfc7519).  The header must have the form:
        > Authorization: Bearer *JWT*

        where *JWT* is a token returned in the response to this post request.  The returned token is valid for a limited time; typically for about 10 minutes.

        There are two ways for supplying credentials in the request body:
        1) Over a secure connection (`https://` scheme), credentials in the form of a realm, username, and password may be supplied.
        1) Over any connection, a digest login may be used to obtain a token without transmitting the password.

        We recommend using digest-based authentication whenever possible.
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/DigestObject'
                - $ref: '#/components/schemas/PasswordObject'
      responses:
        '200':
          description: Authentication response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTObject'
  /auth/logout:
    get:
      summary: /auth/logout
      operationId: authLogoutGet
      description: Revoke the JWT supplied as the bearer token in the Authorization header.
      responses:
        '200':
          description: Logout response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusObject'
  /auth/unauthorized:
    get:
      summary: /auth/unauthorized
      operationId: authUnauthorizedGet
      description: This resource returns a 401 response unless the request contains an Authorized header with a valid JWT token.   This can be used to check the validity of a JWT token and, if invalid, obtain the realm and server nonce required to refresh the token.
      responses:
        '200':
          description: Status response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusObject'
                example: You are logged in.
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /auth/rights:
    get:
      summary: /auth/rights
      operationId: authRightsGet
      description: Return a list of rights the authenticated user possesses.
      responses:
        '200':
          description: Rights response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RightsObject'
  /log:
    description: Provides access to various logs.  Since logs may contain sensitive information, this service is available only to users with the `save` privilege (see /auth/rights).
  /log/kernel:
    get:
      summary: /log/kernel
      operationId: logKernelGet
      responses:
        '200':
          description: Returns the kernel log. The kernel log has a fixed size and consists of a series of prioritized and time stamped messages. When the log fills up, older entries are dropped.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KernelLogObject'
  /config:
    description: |-
      The meter configuration.
      The following atomicity guarantees are provided for this resource: `GET` responses are guaranteed to return a consistent view of the meter configuration.  Modification requests (`POST`, `PUT`, and `DELETE`) are executed transactionally, meaning either all of a modification is applied or none of it.  Multiple modifications are applied in a sequentially consistent fashion.  That is, there must exist a sequential order in which the modifications can be applied that yields the final result.

      `GET` responses contain an `ETag` header which provides a unique tag for the returned configuration.  When updating the configuration with a PUT request, an `If-Match` header can be included to apply the `PUT` request only if the configuration has not changed since the `GET` response was received.
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config
      operationId: config:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/config'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config
      operationId: config:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config
      operationId: config:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config
      operationId: config:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/bacnet:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/bacnet
      operationId: configBacnet:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configBacnet'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/bacnet
      operationId: configBacnet:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnet'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/bacnet
      operationId: configBacnet:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnet'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/bacnet
      operationId: configBacnet:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/bacnet/server:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/bacnet/server
      operationId: configBacnetServer:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configBacnetServer'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/bacnet/server
      operationId: configBacnetServer:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServer'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/bacnet/server
      operationId: configBacnetServer:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServer'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/bacnet/server
      operationId: configBacnetServer:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/bacnet/server/bip:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/bacnet/server/bip
      operationId: configBacnetServerBip:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configBacnetServerBip'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/bacnet/server/bip
      operationId: configBacnetServerBip:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerBip'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/bacnet/server/bip
      operationId: configBacnetServerBip:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerBip'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/bacnet/server/bip
      operationId: configBacnetServerBip:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/bacnet/server/bip/port:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/bacnet/server/bip/port
      operationId: configBacnetServerBipPort:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configBacnetServerBipPort'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/bacnet/server/bip/port
      operationId: configBacnetServerBipPort:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerBipPort'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/bacnet/server/bip/port
      operationId: configBacnetServerBipPort:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerBipPort'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/bacnet/server/bip/port
      operationId: configBacnetServerBipPort:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/bacnet/server/enable:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/bacnet/server/enable
      operationId: configBacnetServerEnable:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configBacnetServerEnable'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/bacnet/server/enable
      operationId: configBacnetServerEnable:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerEnable'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/bacnet/server/enable
      operationId: configBacnetServerEnable:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerEnable'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/bacnet/server/enable
      operationId: configBacnetServerEnable:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/bacnet/server/enable/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an enabled BACnet protocol.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/bacnet/server/enable/{idx}
      operationId: configBacnetServerEnableItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configBacnetServerEnableItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/bacnet/server/enable/{idx}
      operationId: configBacnetServerEnableItem:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerEnableItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/bacnet/server/enable/{idx}
      operationId: configBacnetServerEnableItem:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerEnableItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/bacnet/server/enable/{idx}
      operationId: configBacnetServerEnableItem:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/bacnet/server/epoch-relative:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/bacnet/server/epoch-relative
      operationId: configBacnetServerEpochRelative:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configBacnetServerEpochRelative'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/bacnet/server/epoch-relative
      operationId: configBacnetServerEpochRelative:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerEpochRelative'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/bacnet/server/epoch-relative
      operationId: configBacnetServerEpochRelative:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerEpochRelative'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/bacnet/server/epoch-relative
      operationId: configBacnetServerEpochRelative:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/bacnet/server/id:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/bacnet/server/id
      operationId: configBacnetServerId:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configBacnetServerId'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/bacnet/server/id
      operationId: configBacnetServerId:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerId'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/bacnet/server/id
      operationId: configBacnetServerId:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerId'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/bacnet/server/id
      operationId: configBacnetServerId:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/bacnet/server/mstp:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/bacnet/server/mstp
      operationId: configBacnetServerMstp:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configBacnetServerMstp'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/bacnet/server/mstp
      operationId: configBacnetServerMstp:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerMstp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/bacnet/server/mstp
      operationId: configBacnetServerMstp:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerMstp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/bacnet/server/mstp
      operationId: configBacnetServerMstp:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/bacnet/server/mstp/mac:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/bacnet/server/mstp/mac
      operationId: configBacnetServerMstpMac:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configBacnetServerMstpMac'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/bacnet/server/mstp/mac
      operationId: configBacnetServerMstpMac:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerMstpMac'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/bacnet/server/mstp/mac
      operationId: configBacnetServerMstpMac:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerMstpMac'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/bacnet/server/mstp/mac
      operationId: configBacnetServerMstpMac:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/bacnet/server/mstp/max-mac:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/bacnet/server/mstp/max-mac
      operationId: configBacnetServerMstpMaxMac:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configBacnetServerMstpMaxMac'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/bacnet/server/mstp/max-mac
      operationId: configBacnetServerMstpMaxMac:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerMstpMaxMac'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/bacnet/server/mstp/max-mac
      operationId: configBacnetServerMstpMaxMac:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerMstpMaxMac'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/bacnet/server/mstp/max-mac
      operationId: configBacnetServerMstpMaxMac:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/bacnet/server/mstp/port:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/bacnet/server/mstp/port
      operationId: configBacnetServerMstpPort:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configBacnetServerMstpPort'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/bacnet/server/mstp/port
      operationId: configBacnetServerMstpPort:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerMstpPort'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/bacnet/server/mstp/port
      operationId: configBacnetServerMstpPort:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configBacnetServerMstpPort'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/bacnet/server/mstp/port
      operationId: configBacnetServerMstpPort:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/db:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/db
      operationId: configDb:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configDb'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/db
      operationId: configDb:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDb'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/db
      operationId: configDb:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDb'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/db
      operationId: configDb:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/db/epoch:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/db/epoch
      operationId: configDbEpoch:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configDbEpoch'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/db/epoch
      operationId: configDbEpoch:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDbEpoch'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/db/epoch
      operationId: configDbEpoch:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDbEpoch'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/db/epoch
      operationId: configDbEpoch:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/display:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/display
      operationId: configDisplay:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configDisplay'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/display
      operationId: configDisplay:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplay'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/display
      operationId: configDisplay:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplay'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/display
      operationId: configDisplay:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/display/backlight:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/display/backlight
      operationId: configDisplayBacklight:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configDisplayBacklight'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/display/backlight
      operationId: configDisplayBacklight:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayBacklight'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/display/backlight
      operationId: configDisplayBacklight:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayBacklight'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/display/backlight
      operationId: configDisplayBacklight:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/display/backlight/brightness:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/display/backlight/brightness
      operationId: configDisplayBacklightBrightness:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configDisplayBacklightBrightness'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/display/backlight/brightness
      operationId: configDisplayBacklightBrightness:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayBacklightBrightness'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/display/backlight/brightness
      operationId: configDisplayBacklightBrightness:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayBacklightBrightness'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/display/backlight/brightness
      operationId: configDisplayBacklightBrightness:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/display/backlight/duration:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/display/backlight/duration
      operationId: configDisplayBacklightDuration:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configDisplayBacklightDuration'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/display/backlight/duration
      operationId: configDisplayBacklightDuration:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayBacklightDuration'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/display/backlight/duration
      operationId: configDisplayBacklightDuration:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayBacklightDuration'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/display/backlight/duration
      operationId: configDisplayBacklightDuration:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/display/contrast:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/display/contrast
      operationId: configDisplayContrast:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configDisplayContrast'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/display/contrast
      operationId: configDisplayContrast:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayContrast'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/display/contrast
      operationId: configDisplayContrast:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayContrast'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/display/contrast
      operationId: configDisplayContrast:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/display/fontset:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/display/fontset
      operationId: configDisplayFontset:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configDisplayFontset'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/display/fontset
      operationId: configDisplayFontset:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayFontset'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/display/fontset
      operationId: configDisplayFontset:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayFontset'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/display/fontset
      operationId: configDisplayFontset:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/display/screen:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/display/screen
      operationId: configDisplayScreen:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configDisplayScreen'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/display/screen
      operationId: configDisplayScreen:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayScreen'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/display/screen
      operationId: configDisplayScreen:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayScreen'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/display/screen
      operationId: configDisplayScreen:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/display/screen/registers:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/display/screen/registers
      operationId: configDisplayScreenRegisters:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configDisplayScreenRegisters'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/display/screen/registers
      operationId: configDisplayScreenRegisters:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayScreenRegisters'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/display/screen/registers
      operationId: configDisplayScreenRegisters:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayScreenRegisters'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/display/screen/registers
      operationId: configDisplayScreenRegisters:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/display/screen/registers/{regidx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a register that is being displayed on the LCD.
        in: path
        name: regidx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/display/screen/registers/{regidx}
      operationId: configDisplayScreenRegistersRegidx:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configDisplayScreenRegistersRegidx'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/display/screen/registers/{regidx}
      operationId: configDisplayScreenRegistersRegidx:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayScreenRegistersRegidx'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/display/screen/registers/{regidx}
      operationId: configDisplayScreenRegistersRegidx:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayScreenRegistersRegidx'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/display/screen/registers/{regidx}
      operationId: configDisplayScreenRegistersRegidx:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/display/orientation:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/display/orientation
      operationId: configDisplayOrientation:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configDisplayOrientation'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/display/orientation
      operationId: configDisplayOrientation:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayOrientation'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/display/orientation
      operationId: configDisplayOrientation:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configDisplayOrientation'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/display/orientation
      operationId: configDisplayOrientation:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/language_code:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/language_code
      operationId: configLanguageCode:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLanguageCode'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/language_code
      operationId: configLanguageCode:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLanguageCode'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/language_code
      operationId: configLanguageCode:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLanguageCode'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/language_code
      operationId: configLanguageCode:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/local:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/local
      operationId: configLocal:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLocal'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/local
      operationId: configLocal:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocal'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/local
      operationId: configLocal:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocal'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/local
      operationId: configLocal:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/local/sensor:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/local/sensor
      operationId: configLocalSensor:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLocalSensor'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/local/sensor
      operationId: configLocalSensor:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensor'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/local/sensor
      operationId: configLocalSensor:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensor'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/local/sensor
      operationId: configLocalSensor:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/local/sensor/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a sensor.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/local/sensor/{idx}
      operationId: configLocalSensorIdx:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLocalSensorIdx'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/local/sensor/{idx}
      operationId: configLocalSensorIdx:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdx'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/local/sensor/{idx}
      operationId: configLocalSensorIdx:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdx'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/local/sensor/{idx}
      operationId: configLocalSensorIdx:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/local/sensor/{idx}/channel:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a sensor.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/local/sensor/{idx}/channel
      operationId: configLocalSensorIdxChannel:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLocalSensorIdxChannel'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/local/sensor/{idx}/channel
      operationId: configLocalSensorIdxChannel:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdxChannel'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/local/sensor/{idx}/channel
      operationId: configLocalSensorIdxChannel:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdxChannel'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/local/sensor/{idx}/channel
      operationId: configLocalSensorIdxChannel:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/local/sensor/{idx}/channel/bias:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a sensor.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/local/sensor/{idx}/channel/bias
      operationId: configLocalSensorIdxChannelBias:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLocalSensorIdxChannelBias'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/local/sensor/{idx}/channel/bias
      operationId: configLocalSensorIdxChannelBias:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdxChannelBias'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/local/sensor/{idx}/channel/bias
      operationId: configLocalSensorIdxChannelBias:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdxChannelBias'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/local/sensor/{idx}/channel/bias
      operationId: configLocalSensorIdxChannelBias:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/local/sensor/{idx}/channel/mode:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a sensor.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/local/sensor/{idx}/channel/mode
      operationId: configLocalSensorIdxChannelMode:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLocalSensorIdxChannelMode'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/local/sensor/{idx}/channel/mode
      operationId: configLocalSensorIdxChannelMode:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdxChannelMode'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/local/sensor/{idx}/channel/mode
      operationId: configLocalSensorIdxChannelMode:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdxChannelMode'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/local/sensor/{idx}/channel/mode
      operationId: configLocalSensorIdxChannelMode:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/local/sensor/{idx}/channel/scale:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a sensor.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/local/sensor/{idx}/channel/scale
      operationId: configLocalSensorIdxChannelScale:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLocalSensorIdxChannelScale'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/local/sensor/{idx}/channel/scale
      operationId: configLocalSensorIdxChannelScale:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdxChannelScale'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/local/sensor/{idx}/channel/scale
      operationId: configLocalSensorIdxChannelScale:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdxChannelScale'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/local/sensor/{idx}/channel/scale
      operationId: configLocalSensorIdxChannelScale:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/local/sensor/{idx}/error:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a sensor.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/local/sensor/{idx}/error
      operationId: configLocalSensorIdxError:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLocalSensorIdxError'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/local/sensor/{idx}/error
      operationId: configLocalSensorIdxError:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdxError'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/local/sensor/{idx}/error
      operationId: configLocalSensorIdxError:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdxError'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/local/sensor/{idx}/error
      operationId: configLocalSensorIdxError:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/local/sensor/{idx}/model:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a sensor.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/local/sensor/{idx}/model
      operationId: configLocalSensorIdxModel:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLocalSensorIdxModel'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/local/sensor/{idx}/model
      operationId: configLocalSensorIdxModel:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdxModel'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/local/sensor/{idx}/model
      operationId: configLocalSensorIdxModel:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdxModel'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/local/sensor/{idx}/model
      operationId: configLocalSensorIdxModel:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/local/sensor/{idx}/phase:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a sensor.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/local/sensor/{idx}/phase
      operationId: configLocalSensorIdxPhase:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLocalSensorIdxPhase'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/local/sensor/{idx}/phase
      operationId: configLocalSensorIdxPhase:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdxPhase'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/local/sensor/{idx}/phase
      operationId: configLocalSensorIdxPhase:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalSensorIdxPhase'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/local/sensor/{idx}/phase
      operationId: configLocalSensorIdxPhase:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/local/gain:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/local/gain
      operationId: configLocalGain:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLocalGain'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/local/gain
      operationId: configLocalGain:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalGain'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/local/gain
      operationId: configLocalGain:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalGain'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/local/gain
      operationId: configLocalGain:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/local/update-interval:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/local/update-interval
      operationId: configLocalUpdateInterval:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLocalUpdateInterval'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/local/update-interval
      operationId: configLocalUpdateInterval:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalUpdateInterval'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/local/update-interval
      operationId: configLocalUpdateInterval:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocalUpdateInterval'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/local/update-interval
      operationId: configLocalUpdateInterval:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/location:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/location
      operationId: configLocation:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLocation'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/location
      operationId: configLocation:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocation'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/location
      operationId: configLocation:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocation'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/location
      operationId: configLocation:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/location/latitude:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/location/latitude
      operationId: configLocationLatitude:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLocationLatitude'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/location/latitude
      operationId: configLocationLatitude:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocationLatitude'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/location/latitude
      operationId: configLocationLatitude:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocationLatitude'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/location/latitude
      operationId: configLocationLatitude:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/location/longitude:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/location/longitude
      operationId: configLocationLongitude:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLocationLongitude'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/location/longitude
      operationId: configLocationLongitude:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocationLongitude'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/location/longitude
      operationId: configLocationLongitude:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLocationLongitude'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/location/longitude
      operationId: configLocationLongitude:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/log:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/log
      operationId: configLog:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLog'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/log
      operationId: configLog:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLog'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/log
      operationId: configLog:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLog'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/log
      operationId: configLog:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/log/system:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/log/system
      operationId: configLogSystem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLogSystem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/log/system
      operationId: configLogSystem:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLogSystem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/log/system
      operationId: configLogSystem:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLogSystem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/log/system
      operationId: configLogSystem:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/log/system/size:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/log/system/size
      operationId: configLogSystemSize:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLogSystemSize'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/log/system/size
      operationId: configLogSystemSize:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLogSystemSize'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/log/system/size
      operationId: configLogSystemSize:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLogSystemSize'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/log/system/size
      operationId: configLogSystemSize:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/lua:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/lua
      operationId: configLua:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLua'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/lua
      operationId: configLua:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLua'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/lua
      operationId: configLua:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLua'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/lua
      operationId: configLua:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/lua/script:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/lua/script
      operationId: configLuaScript:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLuaScript'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/lua/script
      operationId: configLuaScript:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLuaScript'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/lua/script
      operationId: configLuaScript:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLuaScript'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/lua/script
      operationId: configLuaScript:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/lua/script/alertd:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/lua/script/alertd
      operationId: configLuaScriptAlertd:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLuaScriptAlertd'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/lua/script/alertd
      operationId: configLuaScriptAlertd:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLuaScriptAlertd'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/lua/script/alertd
      operationId: configLuaScriptAlertd:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLuaScriptAlertd'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/lua/script/alertd
      operationId: configLuaScriptAlertd:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/lua/script/tariff:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/lua/script/tariff
      operationId: configLuaScriptTariff:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLuaScriptTariff'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/lua/script/tariff
      operationId: configLuaScriptTariff:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLuaScriptTariff'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/lua/script/tariff
      operationId: configLuaScriptTariff:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLuaScriptTariff'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/lua/script/tariff
      operationId: configLuaScriptTariff:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/lua/script/teamd:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/lua/script/teamd
      operationId: configLuaScriptTeamd:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLuaScriptTeamd'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/lua/script/teamd
      operationId: configLuaScriptTeamd:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLuaScriptTeamd'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/lua/script/teamd
      operationId: configLuaScriptTeamd:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLuaScriptTeamd'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/lua/script/teamd
      operationId: configLuaScriptTeamd:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/lua/ctrld:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/lua/ctrld
      operationId: configLuaCtrld:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLuaCtrld'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/lua/ctrld
      operationId: configLuaCtrld:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLuaCtrld'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/lua/ctrld
      operationId: configLuaCtrld:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLuaCtrld'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/lua/ctrld
      operationId: configLuaCtrld:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/lua/ctrld/{script}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a Lua script.
        in: path
        name: script
        required: true
        schema:
          type: string
    get:
      summary: /config/lua/ctrld/{script}
      operationId: configLuaCtrldScript:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configLuaCtrldScript'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/lua/ctrld/{script}
      operationId: configLuaCtrldScript:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLuaCtrldScript'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/lua/ctrld/{script}
      operationId: configLuaCtrldScript:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configLuaCtrldScript'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/lua/ctrld/{script}
      operationId: configLuaCtrldScript:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/modbus
      operationId: configModbus:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbus'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus
      operationId: configModbus:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbus'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus
      operationId: configModbus:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbus'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus
      operationId: configModbus:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/client:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/modbus/client
      operationId: configModbusClient:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusClient'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/client
      operationId: configModbusClient:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClient'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/client
      operationId: configModbusClient:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClient'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/client
      operationId: configModbusClient:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/client/map:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/modbus/client/map
      operationId: configModbusClientMap:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusClientMap'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/client/map
      operationId: configModbusClientMap:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMap'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/client/map
      operationId: configModbusClientMap:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMap'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/client/map
      operationId: configModbusClientMap:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/client/map/{name}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /config/modbus/client/map/{name}
      operationId: configModbusClientMapName:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusClientMapName'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/client/map/{name}
      operationId: configModbusClientMapName:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapName'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/client/map/{name}
      operationId: configModbusClientMapName:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapName'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/client/map/{name}
      operationId: configModbusClientMapName:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/client/map/{name}/option:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /config/modbus/client/map/{name}/option
      operationId: configModbusClientMapNameOption:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusClientMapNameOption'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/client/map/{name}/option
      operationId: configModbusClientMapNameOption:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameOption'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/client/map/{name}/option
      operationId: configModbusClientMapNameOption:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameOption'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/client/map/{name}/option
      operationId: configModbusClientMapNameOption:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/client/map/{name}/option/{opt}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The name of a Modbus map option.
        in: path
        name: opt
        required: true
        schema:
          type: string
    get:
      summary: /config/modbus/client/map/{name}/option/{opt}
      operationId: configModbusClientMapNameOptionOpt:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusClientMapNameOptionOpt'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/client/map/{name}/option/{opt}
      operationId: configModbusClientMapNameOptionOpt:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameOptionOpt'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/client/map/{name}/option/{opt}
      operationId: configModbusClientMapNameOptionOpt:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameOptionOpt'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/client/map/{name}/option/{opt}
      operationId: configModbusClientMapNameOptionOpt:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/client/map/{name}/reg:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /config/modbus/client/map/{name}/reg
      operationId: configModbusClientMapNameReg:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusClientMapNameReg'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/client/map/{name}/reg
      operationId: configModbusClientMapNameReg:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameReg'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/client/map/{name}/reg
      operationId: configModbusClientMapNameReg:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameReg'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/client/map/{name}/reg
      operationId: configModbusClientMapNameReg:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/client/map/{name}/reg/{regidx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: regidx
        required: true
        schema:
          type: string
    get:
      summary: /config/modbus/client/map/{name}/reg/{regidx}
      operationId: configModbusClientMapNameRegItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusClientMapNameRegItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/client/map/{name}/reg/{regidx}
      operationId: configModbusClientMapNameRegItem:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/client/map/{name}/reg/{regidx}
      operationId: configModbusClientMapNameRegItem:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/client/map/{name}/reg/{regidx}
      operationId: configModbusClientMapNameRegItem:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/client/map/{name}/reg/{regidx}/name:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: regidx
        required: true
        schema:
          type: string
    get:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/name
      operationId: configModbusClientMapNameRegItemName:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusClientMapNameRegItemName'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/name
      operationId: configModbusClientMapNameRegItemName:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemName'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/name
      operationId: configModbusClientMapNameRegItemName:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemName'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/name
      operationId: configModbusClientMapNameRegItemName:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/client/map/{name}/reg/{regidx}/addr:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: regidx
        required: true
        schema:
          type: string
    get:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/addr
      operationId: configModbusClientMapNameRegItemAddr:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusClientMapNameRegItemAddr'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/addr
      operationId: configModbusClientMapNameRegItemAddr:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemAddr'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/addr
      operationId: configModbusClientMapNameRegItemAddr:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemAddr'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/addr
      operationId: configModbusClientMapNameRegItemAddr:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/client/map/{name}/reg/{regidx}/type:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: regidx
        required: true
        schema:
          type: string
    get:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/type
      operationId: configModbusClientMapNameRegItemType:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusClientMapNameRegItemType'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/type
      operationId: configModbusClientMapNameRegItemType:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemType'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/type
      operationId: configModbusClientMapNameRegItemType:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemType'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/type
      operationId: configModbusClientMapNameRegItemType:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/client/map/{name}/reg/{regidx}/kind:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: regidx
        required: true
        schema:
          type: string
    get:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/kind
      operationId: configModbusClientMapNameRegItemKind:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusClientMapNameRegItemKind'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/kind
      operationId: configModbusClientMapNameRegItemKind:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemKind'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/kind
      operationId: configModbusClientMapNameRegItemKind:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemKind'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/kind
      operationId: configModbusClientMapNameRegItemKind:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/client/map/{name}/reg/{regidx}/unit:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: regidx
        required: true
        schema:
          type: string
    get:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/unit
      operationId: configModbusClientMapNameRegItemUnit:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusClientMapNameRegItemUnit'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/unit
      operationId: configModbusClientMapNameRegItemUnit:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemUnit'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/unit
      operationId: configModbusClientMapNameRegItemUnit:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemUnit'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/unit
      operationId: configModbusClientMapNameRegItemUnit:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/client/map/{name}/reg/{regidx}/offset:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: regidx
        required: true
        schema:
          type: string
    get:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/offset
      operationId: configModbusClientMapNameRegItemOffset:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusClientMapNameRegItemOffset'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/offset
      operationId: configModbusClientMapNameRegItemOffset:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemOffset'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/offset
      operationId: configModbusClientMapNameRegItemOffset:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemOffset'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/offset
      operationId: configModbusClientMapNameRegItemOffset:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/client/map/{name}/reg/{regidx}/scale:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: regidx
        required: true
        schema:
          type: string
    get:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/scale
      operationId: configModbusClientMapNameRegItemScale:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusClientMapNameRegItemScale'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/scale
      operationId: configModbusClientMapNameRegItemScale:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemScale'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/scale
      operationId: configModbusClientMapNameRegItemScale:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemScale'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/scale
      operationId: configModbusClientMapNameRegItemScale:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/client/map/{name}/reg/{regidx}/access:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: regidx
        required: true
        schema:
          type: string
    get:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/access
      operationId: configModbusClientMapNameRegItemAccess:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusClientMapNameRegItemAccess'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/access
      operationId: configModbusClientMapNameRegItemAccess:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemAccess'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/access
      operationId: configModbusClientMapNameRegItemAccess:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusClientMapNameRegItemAccess'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/client/map/{name}/reg/{regidx}/access
      operationId: configModbusClientMapNameRegItemAccess:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/server:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/modbus/server
      operationId: configModbusServer:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusServer'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/server
      operationId: configModbusServer:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServer'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/server
      operationId: configModbusServer:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServer'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/server
      operationId: configModbusServer:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/server/enable:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/modbus/server/enable
      operationId: configModbusServerEnable:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusServerEnable'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/server/enable
      operationId: configModbusServerEnable:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServerEnable'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/server/enable
      operationId: configModbusServerEnable:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServerEnable'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/server/enable
      operationId: configModbusServerEnable:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/server/enable/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an enabled Modbus protocol.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/modbus/server/enable/{idx}
      operationId: configModbusServerEnableItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusServerEnableItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/server/enable/{idx}
      operationId: configModbusServerEnableItem:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServerEnableItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/server/enable/{idx}
      operationId: configModbusServerEnableItem:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServerEnableItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/server/enable/{idx}
      operationId: configModbusServerEnableItem:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/server/id:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/modbus/server/id
      operationId: configModbusServerId:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusServerId'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/server/id
      operationId: configModbusServerId:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServerId'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/server/id
      operationId: configModbusServerId:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServerId'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/server/id
      operationId: configModbusServerId:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/server/rtu:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/modbus/server/rtu
      operationId: configModbusServerRtu:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusServerRtu'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/server/rtu
      operationId: configModbusServerRtu:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServerRtu'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/server/rtu
      operationId: configModbusServerRtu:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServerRtu'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/server/rtu
      operationId: configModbusServerRtu:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/server/rtu/port:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/modbus/server/rtu/port
      operationId: configModbusServerRtuPort:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusServerRtuPort'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/server/rtu/port
      operationId: configModbusServerRtuPort:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServerRtuPort'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/server/rtu/port
      operationId: configModbusServerRtuPort:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServerRtuPort'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/server/rtu/port
      operationId: configModbusServerRtuPort:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/server/tcp:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/modbus/server/tcp
      operationId: configModbusServerTcp:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusServerTcp'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/server/tcp
      operationId: configModbusServerTcp:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServerTcp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/server/tcp
      operationId: configModbusServerTcp:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServerTcp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/server/tcp
      operationId: configModbusServerTcp:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/modbus/server/tcp/port:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/modbus/server/tcp/port
      operationId: configModbusServerTcpPort:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configModbusServerTcpPort'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/modbus/server/tcp/port
      operationId: configModbusServerTcpPort:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServerTcpPort'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/modbus/server/tcp/port
      operationId: configModbusServerTcpPort:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configModbusServerTcpPort'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/modbus/server/tcp/port
      operationId: configModbusServerTcpPort:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net
      operationId: configNet:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNet'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net
      operationId: configNet:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNet'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net
      operationId: configNet:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNet'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net
      operationId: configNet:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ethernet:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/ethernet
      operationId: configNetEthernet:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetEthernet'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ethernet
      operationId: configNetEthernet:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetEthernet'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ethernet
      operationId: configNetEthernet:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetEthernet'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ethernet
      operationId: configNetEthernet:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ethernet/watchdog:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/ethernet/watchdog
      operationId: configNetEthernetWatchdog:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetEthernetWatchdog'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ethernet/watchdog
      operationId: configNetEthernetWatchdog:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetEthernetWatchdog'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ethernet/watchdog
      operationId: configNetEthernetWatchdog:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetEthernetWatchdog'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ethernet/watchdog
      operationId: configNetEthernetWatchdog:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/homeplug:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/homeplug
      operationId: configNetHomeplug:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetHomeplug'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/homeplug
      operationId: configNetHomeplug:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHomeplug'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/homeplug
      operationId: configNetHomeplug:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHomeplug'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/homeplug
      operationId: configNetHomeplug:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/homeplug/region:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/homeplug/region
      operationId: configNetHomeplugRegion:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetHomeplugRegion'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/homeplug/region
      operationId: configNetHomeplugRegion:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHomeplugRegion'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/homeplug/region
      operationId: configNetHomeplugRegion:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHomeplugRegion'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/homeplug/region
      operationId: configNetHomeplugRegion:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/hostname:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/hostname
      operationId: configNetHostname:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetHostname'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/hostname
      operationId: configNetHostname:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHostname'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/hostname
      operationId: configNetHostname:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHostname'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/hostname
      operationId: configNetHostname:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/http:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/http
      operationId: configNetHttp:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetHttp'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/http
      operationId: configNetHttp:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHttp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/http
      operationId: configNetHttp:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHttp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/http
      operationId: configNetHttp:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/http/client:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/http/client
      operationId: configNetHttpClient:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetHttpClient'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/http/client
      operationId: configNetHttpClient:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHttpClient'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/http/client
      operationId: configNetHttpClient:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHttpClient'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/http/client
      operationId: configNetHttpClient:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/http/client/insecure:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/http/client/insecure
      operationId: configNetHttpClientInsecure:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetHttpClientInsecure'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/http/client/insecure
      operationId: configNetHttpClientInsecure:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHttpClientInsecure'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/http/client/insecure
      operationId: configNetHttpClientInsecure:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHttpClientInsecure'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/http/client/insecure
      operationId: configNetHttpClientInsecure:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/http/certificate:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/http/certificate
      operationId: configNetHttpCertificate:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetHttpCertificate'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/http/certificate
      operationId: configNetHttpCertificate:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHttpCertificate'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/http/certificate
      operationId: configNetHttpCertificate:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHttpCertificate'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/http/certificate
      operationId: configNetHttpCertificate:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/http/cgi-bin:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/http/cgi-bin
      operationId: configNetHttpCgiBin:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetHttpCgiBin'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/http/cgi-bin
      operationId: configNetHttpCgiBin:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHttpCgiBin'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/http/cgi-bin
      operationId: configNetHttpCgiBin:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetHttpCgiBin'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/http/cgi-bin
      operationId: configNetHttpCgiBin:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ipv4:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/ipv4
      operationId: configNetIpv4:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetIpv4'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ipv4
      operationId: configNetIpv4:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetIpv4'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ipv4
      operationId: configNetIpv4:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetIpv4'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ipv4
      operationId: configNetIpv4:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ipv4/dhcp:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/ipv4/dhcp
      operationId: configNetIpv4Dhcp:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetIpv4Dhcp'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ipv4/dhcp
      operationId: configNetIpv4Dhcp:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetIpv4Dhcp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ipv4/dhcp
      operationId: configNetIpv4Dhcp:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetIpv4Dhcp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ipv4/dhcp
      operationId: configNetIpv4Dhcp:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ipv4/address:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/ipv4/address
      operationId: configNetIpv4Address:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetIpv4Address'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ipv4/address
      operationId: configNetIpv4Address:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetIpv4Address'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ipv4/address
      operationId: configNetIpv4Address:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetIpv4Address'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ipv4/address
      operationId: configNetIpv4Address:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ipv4/broadcast:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/ipv4/broadcast
      operationId: configNetIpv4Broadcast:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetIpv4Broadcast'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ipv4/broadcast
      operationId: configNetIpv4Broadcast:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetIpv4Broadcast'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ipv4/broadcast
      operationId: configNetIpv4Broadcast:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetIpv4Broadcast'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ipv4/broadcast
      operationId: configNetIpv4Broadcast:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ipv4/netmask:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/ipv4/netmask
      operationId: configNetIpv4Netmask:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetIpv4Netmask'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ipv4/netmask
      operationId: configNetIpv4Netmask:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetIpv4Netmask'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ipv4/netmask
      operationId: configNetIpv4Netmask:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetIpv4Netmask'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ipv4/netmask
      operationId: configNetIpv4Netmask:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ipv4/network:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/ipv4/network
      operationId: configNetIpv4Network:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetIpv4Network'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ipv4/network
      operationId: configNetIpv4Network:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetIpv4Network'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ipv4/network
      operationId: configNetIpv4Network:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetIpv4Network'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ipv4/network
      operationId: configNetIpv4Network:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ipv4/gateway:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/ipv4/gateway
      operationId: configNetIpv4Gateway:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetIpv4Gateway'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ipv4/gateway
      operationId: configNetIpv4Gateway:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetIpv4Gateway'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ipv4/gateway
      operationId: configNetIpv4Gateway:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetIpv4Gateway'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ipv4/gateway
      operationId: configNetIpv4Gateway:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/goproxy:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/goproxy
      operationId: configNetGoproxy:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetGoproxy'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/goproxy
      operationId: configNetGoproxy:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetGoproxy'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/goproxy
      operationId: configNetGoproxy:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetGoproxy'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/goproxy
      operationId: configNetGoproxy:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/goproxy/enable:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/goproxy/enable
      operationId: configNetGoproxyEnable:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetGoproxyEnable'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/goproxy/enable
      operationId: configNetGoproxyEnable:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetGoproxyEnable'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/goproxy/enable
      operationId: configNetGoproxyEnable:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetGoproxyEnable'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/goproxy/enable
      operationId: configNetGoproxyEnable:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/goproxy/server:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/goproxy/server
      operationId: configNetGoproxyServer:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetGoproxyServer'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/goproxy/server
      operationId: configNetGoproxyServer:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetGoproxyServer'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/goproxy/server
      operationId: configNetGoproxyServer:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetGoproxyServer'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/goproxy/server
      operationId: configNetGoproxyServer:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/nameserver:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/nameserver
      operationId: configNetNameserver:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetNameserver'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/nameserver
      operationId: configNetNameserver:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetNameserver'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/nameserver
      operationId: configNetNameserver:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetNameserver'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/nameserver
      operationId: configNetNameserver:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/nameserver/server:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/nameserver/server
      operationId: configNetNameserverServer:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetNameserverServer'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/nameserver/server
      operationId: configNetNameserverServer:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetNameserverServer'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/nameserver/server
      operationId: configNetNameserverServer:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetNameserverServer'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/nameserver/server
      operationId: configNetNameserverServer:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/nameserver/server/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a DNS server.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/net/nameserver/server/{idx}
      operationId: configNetNameserverServerItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetNameserverServerItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/nameserver/server/{idx}
      operationId: configNetNameserverServerItem:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetNameserverServerItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/nameserver/server/{idx}
      operationId: configNetNameserverServerItem:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetNameserverServerItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/nameserver/server/{idx}
      operationId: configNetNameserverServerItem:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ntp:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/ntp
      operationId: configNetNtp:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetNtp'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ntp
      operationId: configNetNtp:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetNtp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ntp
      operationId: configNetNtp:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetNtp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ntp
      operationId: configNetNtp:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ntp/server:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/ntp/server
      operationId: configNetNtpServer:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetNtpServer'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ntp/server
      operationId: configNetNtpServer:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetNtpServer'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ntp/server
      operationId: configNetNtpServer:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetNtpServer'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ntp/server
      operationId: configNetNtpServer:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ntp/server/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an NTP server.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/net/ntp/server/{idx}
      operationId: configNetNtpServerItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetNtpServerItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ntp/server/{idx}
      operationId: configNetNtpServerItem:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetNtpServerItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ntp/server/{idx}
      operationId: configNetNtpServerItem:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetNtpServerItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ntp/server/{idx}
      operationId: configNetNtpServerItem:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/proxy:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/proxy
      operationId: configNetProxy:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetProxy'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/proxy
      operationId: configNetProxy:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetProxy'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/proxy
      operationId: configNetProxy:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetProxy'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/proxy
      operationId: configNetProxy:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/proxy/enable:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/proxy/enable
      operationId: configNetProxyEnable:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetProxyEnable'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/proxy/enable
      operationId: configNetProxyEnable:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetProxyEnable'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/proxy/enable
      operationId: configNetProxyEnable:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetProxyEnable'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/proxy/enable
      operationId: configNetProxyEnable:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/proxy/server:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/proxy/server
      operationId: configNetProxyServer:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetProxyServer'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/proxy/server
      operationId: configNetProxyServer:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetProxyServer'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/proxy/server
      operationId: configNetProxyServer:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetProxyServer'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/proxy/server
      operationId: configNetProxyServer:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ptp:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/ptp
      operationId: configNetPtp:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetPtp'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ptp
      operationId: configNetPtp:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetPtp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ptp
      operationId: configNetPtp:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetPtp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ptp
      operationId: configNetPtp:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ptp/client_only:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/ptp/client_only
      operationId: configNetPtpClientOnly:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetPtpClientOnly'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ptp/client_only
      operationId: configNetPtpClientOnly:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetPtpClientOnly'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ptp/client_only
      operationId: configNetPtpClientOnly:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetPtpClientOnly'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ptp/client_only
      operationId: configNetPtpClientOnly:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ptp/interface:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/net/ptp/interface
      operationId: configNetPtpInterface:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetPtpInterface'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ptp/interface
      operationId: configNetPtpInterface:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetPtpInterface'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ptp/interface
      operationId: configNetPtpInterface:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetPtpInterface'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ptp/interface
      operationId: configNetPtpInterface:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ptp/interface/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an PTP interface.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/net/ptp/interface/{idx}
      operationId: configNetPtpInterfaceIdx:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetPtpInterfaceIdx'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ptp/interface/{idx}
      operationId: configNetPtpInterfaceIdx:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetPtpInterfaceIdx'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ptp/interface/{idx}
      operationId: configNetPtpInterfaceIdx:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetPtpInterfaceIdx'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ptp/interface/{idx}
      operationId: configNetPtpInterfaceIdx:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/net/ptp/interface/{idx}/transport:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an PTP interface.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/net/ptp/interface/{idx}/transport
      operationId: configNetPtpInterfaceIdxTransport:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configNetPtpInterfaceIdxTransport'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/net/ptp/interface/{idx}/transport
      operationId: configNetPtpInterfaceIdxTransport:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetPtpInterfaceIdxTransport'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/net/ptp/interface/{idx}/transport
      operationId: configNetPtpInterfaceIdxTransport:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configNetPtpInterfaceIdxTransport'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/net/ptp/interface/{idx}/transport
      operationId: configNetPtpInterfaceIdxTransport:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/push:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/push
      operationId: configPush:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configPush'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/push
      operationId: configPush:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configPush'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/push
      operationId: configPush:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configPush'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/push
      operationId: configPush:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/push/interval:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/push/interval
      operationId: configPushInterval:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configPushInterval'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/push/interval
      operationId: configPushInterval:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configPushInterval'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/push/interval
      operationId: configPushInterval:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configPushInterval'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/push/interval
      operationId: configPushInterval:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/push/options:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/push/options
      operationId: configPushOptions:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configPushOptions'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/push/options
      operationId: configPushOptions:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configPushOptions'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/push/options
      operationId: configPushOptions:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configPushOptions'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/push/options
      operationId: configPushOptions:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/push/password:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/push/password
      operationId: configPushPassword:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configPushPassword'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/push/password
      operationId: configPushPassword:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configPushPassword'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/push/password
      operationId: configPushPassword:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configPushPassword'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/push/password
      operationId: configPushPassword:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/push/service:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/push/service
      operationId: configPushService:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configPushService'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/push/service
      operationId: configPushService:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configPushService'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/push/service
      operationId: configPushService:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configPushService'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/push/service
      operationId: configPushService:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/push/uri:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/push/uri
      operationId: configPushUri:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configPushUri'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/push/uri
      operationId: configPushUri:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configPushUri'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/push/uri
      operationId: configPushUri:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configPushUri'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/push/uri
      operationId: configPushUri:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/push/user:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/push/user
      operationId: configPushUser:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configPushUser'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/push/user
      operationId: configPushUser:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configPushUser'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/push/user
      operationId: configPushUser:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configPushUser'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/push/user
      operationId: configPushUser:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/register:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/register
      operationId: configRegister:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configRegister'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/register
      operationId: configRegister:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegister'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/register
      operationId: configRegister:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegister'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/register
      operationId: configRegister:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/register/physical:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/register/physical
      operationId: configRegisterPhysical:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configRegisterPhysical'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/register/physical
      operationId: configRegisterPhysical:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterPhysical'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/register/physical
      operationId: configRegisterPhysical:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterPhysical'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/register/physical
      operationId: configRegisterPhysical:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/register/physical/{reg}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a register.
        in: path
        name: reg
        required: true
        schema:
          type: string
    get:
      summary: /config/register/physical/{reg}
      operationId: configRegisterPhysicalReg:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configRegisterPhysicalReg'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/register/physical/{reg}
      operationId: configRegisterPhysicalReg:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterPhysicalReg'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/register/physical/{reg}
      operationId: configRegisterPhysicalReg:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterPhysicalReg'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/register/physical/{reg}
      operationId: configRegisterPhysicalReg:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/register/physical/{reg}/dev:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a register.
        in: path
        name: reg
        required: true
        schema:
          type: string
    get:
      summary: /config/register/physical/{reg}/dev
      operationId: configRegisterPhysicalRegDev:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configRegisterPhysicalRegDev'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/register/physical/{reg}/dev
      operationId: configRegisterPhysicalRegDev:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterPhysicalRegDev'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/register/physical/{reg}/dev
      operationId: configRegisterPhysicalRegDev:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterPhysicalRegDev'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/register/physical/{reg}/dev
      operationId: configRegisterPhysicalRegDev:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/register/physical/{reg}/did:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a register.
        in: path
        name: reg
        required: true
        schema:
          type: string
    get:
      summary: /config/register/physical/{reg}/did
      operationId: configRegisterPhysicalRegDid:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configRegisterPhysicalRegDid'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/register/physical/{reg}/did
      operationId: configRegisterPhysicalRegDid:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterPhysicalRegDid'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/register/physical/{reg}/did
      operationId: configRegisterPhysicalRegDid:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterPhysicalRegDid'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/register/physical/{reg}/did
      operationId: configRegisterPhysicalRegDid:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/register/physical/{reg}/type:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a register.
        in: path
        name: reg
        required: true
        schema:
          type: string
    get:
      summary: /config/register/physical/{reg}/type
      operationId: configRegisterPhysicalRegType:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configRegisterPhysicalRegType'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/register/physical/{reg}/type
      operationId: configRegisterPhysicalRegType:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterPhysicalRegType'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/register/physical/{reg}/type
      operationId: configRegisterPhysicalRegType:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterPhysicalRegType'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/register/physical/{reg}/type
      operationId: configRegisterPhysicalRegType:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/register/physical/{reg}/value:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a register.
        in: path
        name: reg
        required: true
        schema:
          type: string
    get:
      summary: /config/register/physical/{reg}/value
      operationId: configRegisterPhysicalRegValue:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configRegisterPhysicalRegValue'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/register/physical/{reg}/value
      operationId: configRegisterPhysicalRegValue:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterPhysicalRegValue'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/register/physical/{reg}/value
      operationId: configRegisterPhysicalRegValue:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterPhysicalRegValue'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/register/physical/{reg}/value
      operationId: configRegisterPhysicalRegValue:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/register/virtual:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/register/virtual
      operationId: configRegisterVirtual:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configRegisterVirtual'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/register/virtual
      operationId: configRegisterVirtual:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterVirtual'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/register/virtual
      operationId: configRegisterVirtual:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterVirtual'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/register/virtual
      operationId: configRegisterVirtual:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/register/virtual/{reg}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a register.
        in: path
        name: reg
        required: true
        schema:
          type: string
    get:
      summary: /config/register/virtual/{reg}
      operationId: configRegisterVirtualReg:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configRegisterVirtualReg'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/register/virtual/{reg}
      operationId: configRegisterVirtualReg:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterVirtualReg'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/register/virtual/{reg}
      operationId: configRegisterVirtualReg:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterVirtualReg'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/register/virtual/{reg}
      operationId: configRegisterVirtualReg:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/register/virtual/{reg}/value:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a register.
        in: path
        name: reg
        required: true
        schema:
          type: string
    get:
      summary: /config/register/virtual/{reg}/value
      operationId: configRegisterVirtualRegValue:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configRegisterVirtualRegValue'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/register/virtual/{reg}/value
      operationId: configRegisterVirtualRegValue:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterVirtualRegValue'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/register/virtual/{reg}/value
      operationId: configRegisterVirtualRegValue:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterVirtualRegValue'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/register/virtual/{reg}/value
      operationId: configRegisterVirtualRegValue:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/register/virtual/{reg}/value/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a register.
        in: path
        name: reg
        required: true
        schema:
          type: string
      - description: The index of a virtual register addend.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/register/virtual/{reg}/value/{idx}
      operationId: configRegisterVirtualRegValueItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configRegisterVirtualRegValueItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/register/virtual/{reg}/value/{idx}
      operationId: configRegisterVirtualRegValueItem:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterVirtualRegValueItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/register/virtual/{reg}/value/{idx}
      operationId: configRegisterVirtualRegValueItem:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterVirtualRegValueItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/register/virtual/{reg}/value/{idx}
      operationId: configRegisterVirtualRegValueItem:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/register/virtual/{reg}/value/{idx}/op:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a register.
        in: path
        name: reg
        required: true
        schema:
          type: string
      - description: The index of a virtual register addend.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/register/virtual/{reg}/value/{idx}/op
      operationId: configRegisterVirtualRegValueItemOp:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configRegisterVirtualRegValueItemOp'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/register/virtual/{reg}/value/{idx}/op
      operationId: configRegisterVirtualRegValueItemOp:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterVirtualRegValueItemOp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/register/virtual/{reg}/value/{idx}/op
      operationId: configRegisterVirtualRegValueItemOp:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterVirtualRegValueItemOp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/register/virtual/{reg}/value/{idx}/op
      operationId: configRegisterVirtualRegValueItemOp:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/register/virtual/{reg}/value/{idx}/register:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a register.
        in: path
        name: reg
        required: true
        schema:
          type: string
      - description: The index of a virtual register addend.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/register/virtual/{reg}/value/{idx}/register
      operationId: configRegisterVirtualRegValueItemRegister:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configRegisterVirtualRegValueItemRegister'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/register/virtual/{reg}/value/{idx}/register
      operationId: configRegisterVirtualRegValueItemRegister:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterVirtualRegValueItemRegister'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/register/virtual/{reg}/value/{idx}/register
      operationId: configRegisterVirtualRegValueItemRegister:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configRegisterVirtualRegValueItemRegister'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/register/virtual/{reg}/value/{idx}/register
      operationId: configRegisterVirtualRegValueItemRegister:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/time:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/time
      operationId: configTime:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configTime'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/time
      operationId: configTime:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configTime'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/time
      operationId: configTime:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configTime'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/time
      operationId: configTime:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/time/zone:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/time/zone
      operationId: configTimeZone:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configTimeZone'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/time/zone
      operationId: configTimeZone:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configTimeZone'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/time/zone
      operationId: configTimeZone:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configTimeZone'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/time/zone
      operationId: configTimeZone:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/user:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/user
      operationId: configUser:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configUser'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/user
      operationId: configUser:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configUser'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/user
      operationId: configUser:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configUser'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/user
      operationId: configUser:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/user/{name}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a user.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /config/user/{name}
      operationId: configUserName:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configUserName'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/user/{name}
      operationId: configUserName:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configUserName'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/user/{name}
      operationId: configUserName:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configUserName'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/user/{name}
      operationId: configUserName:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/user/{name}/priv:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a user.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /config/user/{name}/priv
      operationId: configUserNamePriv:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configUserNamePriv'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/user/{name}/priv
      operationId: configUserNamePriv:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configUserNamePriv'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/user/{name}/priv
      operationId: configUserNamePriv:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configUserNamePriv'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/user/{name}/priv
      operationId: configUserNamePriv:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/user/{name}/priv/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a user.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a privilege.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/user/{name}/priv/{idx}
      operationId: configUserNamePrivItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configUserNamePrivItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/user/{name}/priv/{idx}
      operationId: configUserNamePrivItem:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configUserNamePrivItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/user/{name}/priv/{idx}
      operationId: configUserNamePrivItem:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configUserNamePrivItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/user/{name}/priv/{idx}
      operationId: configUserNamePrivItem:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/user/{name}/hash:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a user.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /config/user/{name}/hash
      operationId: configUserNameHash:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configUserNameHash'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/user/{name}/hash
      operationId: configUserNameHash:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configUserNameHash'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/user/{name}/hash
      operationId: configUserNameHash:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configUserNameHash'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/user/{name}/hash
      operationId: configUserNameHash:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert:
    description: Contains the alert configuration of the meter.
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert
      operationId: configAlert:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlert'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert
      operationId: configAlert:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlert'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert
      operationId: configAlert:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlert'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert
      operationId: configAlert:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/custom:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/custom
      operationId: configAlertCustom:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertCustom'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/custom
      operationId: configAlertCustom:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustom'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/custom
      operationId: configAlertCustom:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustom'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/custom
      operationId: configAlertCustom:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/custom/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a custom alert.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/alert/custom/{idx}
      operationId: configAlertCustomItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertCustomItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/custom/{idx}
      operationId: configAlertCustomItem:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/custom/{idx}
      operationId: configAlertCustomItem:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/custom/{idx}
      operationId: configAlertCustomItem:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/custom/{idx}/name:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a custom alert.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/alert/custom/{idx}/name
      operationId: configAlertCustomItemName:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertCustomItemName'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/custom/{idx}/name
      operationId: configAlertCustomItemName:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemName'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/custom/{idx}/name
      operationId: configAlertCustomItemName:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemName'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/custom/{idx}/name
      operationId: configAlertCustomItemName:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/custom/{idx}/detail:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a custom alert.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/alert/custom/{idx}/detail
      operationId: configAlertCustomItemDetail:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertCustomItemDetail'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/custom/{idx}/detail
      operationId: configAlertCustomItemDetail:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemDetail'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/custom/{idx}/detail
      operationId: configAlertCustomItemDetail:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemDetail'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/custom/{idx}/detail
      operationId: configAlertCustomItemDetail:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/custom/{idx}/frequency:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a custom alert.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/alert/custom/{idx}/frequency
      operationId: configAlertCustomItemFrequency:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertCustomItemFrequency'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/custom/{idx}/frequency
      operationId: configAlertCustomItemFrequency:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemFrequency'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/custom/{idx}/frequency
      operationId: configAlertCustomItemFrequency:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemFrequency'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/custom/{idx}/frequency
      operationId: configAlertCustomItemFrequency:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/custom/{idx}/priority:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a custom alert.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/alert/custom/{idx}/priority
      operationId: configAlertCustomItemPriority:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertCustomItemPriority'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/custom/{idx}/priority
      operationId: configAlertCustomItemPriority:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemPriority'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/custom/{idx}/priority
      operationId: configAlertCustomItemPriority:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemPriority'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/custom/{idx}/priority
      operationId: configAlertCustomItemPriority:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/custom/{idx}/cond:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a custom alert.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/alert/custom/{idx}/cond
      operationId: configAlertCustomItemCond:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertCustomItemCond'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/custom/{idx}/cond
      operationId: configAlertCustomItemCond:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemCond'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/custom/{idx}/cond
      operationId: configAlertCustomItemCond:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemCond'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/custom/{idx}/cond
      operationId: configAlertCustomItemCond:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/custom/{idx}/cond/lhs:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a custom alert.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/alert/custom/{idx}/cond/lhs
      operationId: configAlertCustomItemCondLhs:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertCustomItemCondLhs'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/custom/{idx}/cond/lhs
      operationId: configAlertCustomItemCondLhs:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemCondLhs'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/custom/{idx}/cond/lhs
      operationId: configAlertCustomItemCondLhs:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemCondLhs'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/custom/{idx}/cond/lhs
      operationId: configAlertCustomItemCondLhs:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/custom/{idx}/cond/op:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a custom alert.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/alert/custom/{idx}/cond/op
      operationId: configAlertCustomItemCondOp:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertCustomItemCondOp'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/custom/{idx}/cond/op
      operationId: configAlertCustomItemCondOp:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemCondOp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/custom/{idx}/cond/op
      operationId: configAlertCustomItemCondOp:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemCondOp'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/custom/{idx}/cond/op
      operationId: configAlertCustomItemCondOp:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/custom/{idx}/cond/rhs:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a custom alert.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/alert/custom/{idx}/cond/rhs
      operationId: configAlertCustomItemCondRhs:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertCustomItemCondRhs'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/custom/{idx}/cond/rhs
      operationId: configAlertCustomItemCondRhs:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemCondRhs'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/custom/{idx}/cond/rhs
      operationId: configAlertCustomItemCondRhs:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertCustomItemCondRhs'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/custom/{idx}/cond/rhs
      operationId: configAlertCustomItemCondRhs:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/reporter
      operationId: configAlertReporter:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporter'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter
      operationId: configAlertReporter:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporter'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter
      operationId: configAlertReporter:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporter'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter
      operationId: configAlertReporter:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/web:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/reporter/web
      operationId: configAlertReporterWeb:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterWeb'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/web
      operationId: configAlertReporterWeb:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterWeb'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/web
      operationId: configAlertReporterWeb:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterWeb'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/web
      operationId: configAlertReporterWeb:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/web/min-priority:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/reporter/web/min-priority
      operationId: configAlertReporterWebMinPriority:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterWebMinPriority'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/web/min-priority
      operationId: configAlertReporterWebMinPriority:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterWebMinPriority'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/web/min-priority
      operationId: configAlertReporterWebMinPriority:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterWebMinPriority'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/web/min-priority
      operationId: configAlertReporterWebMinPriority:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/web/service:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/reporter/web/service
      operationId: configAlertReporterWebService:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterWebService'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/web/service
      operationId: configAlertReporterWebService:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterWebService'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/web/service
      operationId: configAlertReporterWebService:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterWebService'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/web/service
      operationId: configAlertReporterWebService:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/web/uri:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/reporter/web/uri
      operationId: configAlertReporterWebUri:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterWebUri'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/web/uri
      operationId: configAlertReporterWebUri:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterWebUri'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/web/uri
      operationId: configAlertReporterWebUri:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterWebUri'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/web/uri
      operationId: configAlertReporterWebUri:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/web/options:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/reporter/web/options
      operationId: configAlertReporterWebOptions:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterWebOptions'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/web/options
      operationId: configAlertReporterWebOptions:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterWebOptions'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/web/options
      operationId: configAlertReporterWebOptions:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterWebOptions'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/web/options
      operationId: configAlertReporterWebOptions:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/web/user:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/reporter/web/user
      operationId: configAlertReporterWebUser:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterWebUser'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/web/user
      operationId: configAlertReporterWebUser:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterWebUser'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/web/user
      operationId: configAlertReporterWebUser:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterWebUser'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/web/user
      operationId: configAlertReporterWebUser:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/web/password:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/reporter/web/password
      operationId: configAlertReporterWebPassword:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterWebPassword'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/web/password
      operationId: configAlertReporterWebPassword:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterWebPassword'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/web/password
      operationId: configAlertReporterWebPassword:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterWebPassword'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/web/password
      operationId: configAlertReporterWebPassword:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/mail:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/reporter/mail
      operationId: configAlertReporterMail:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterMail'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/mail
      operationId: configAlertReporterMail:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMail'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/mail
      operationId: configAlertReporterMail:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMail'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/mail
      operationId: configAlertReporterMail:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/mail/server:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/reporter/mail/server
      operationId: configAlertReporterMailServer:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterMailServer'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/mail/server
      operationId: configAlertReporterMailServer:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailServer'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/mail/server
      operationId: configAlertReporterMailServer:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailServer'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/mail/server
      operationId: configAlertReporterMailServer:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/mail/user:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/reporter/mail/user
      operationId: configAlertReporterMailUser:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterMailUser'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/mail/user
      operationId: configAlertReporterMailUser:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailUser'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/mail/user
      operationId: configAlertReporterMailUser:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailUser'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/mail/user
      operationId: configAlertReporterMailUser:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/mail/password:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/reporter/mail/password
      operationId: configAlertReporterMailPassword:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterMailPassword'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/mail/password
      operationId: configAlertReporterMailPassword:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailPassword'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/mail/password
      operationId: configAlertReporterMailPassword:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailPassword'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/mail/password
      operationId: configAlertReporterMailPassword:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/mail/from-address:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/reporter/mail/from-address
      operationId: configAlertReporterMailFromAddress:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterMailFromAddress'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/mail/from-address
      operationId: configAlertReporterMailFromAddress:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailFromAddress'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/mail/from-address
      operationId: configAlertReporterMailFromAddress:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailFromAddress'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/mail/from-address
      operationId: configAlertReporterMailFromAddress:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/mail/to:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/reporter/mail/to
      operationId: configAlertReporterMailTo:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterMailTo'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/mail/to
      operationId: configAlertReporterMailTo:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailTo'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/mail/to
      operationId: configAlertReporterMailTo:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailTo'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/mail/to
      operationId: configAlertReporterMailTo:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/mail/to/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an alert destination.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/alert/reporter/mail/to/{idx}
      operationId: configAlertReporterMailToItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterMailToItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/mail/to/{idx}
      operationId: configAlertReporterMailToItem:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailToItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/mail/to/{idx}
      operationId: configAlertReporterMailToItem:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailToItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/mail/to/{idx}
      operationId: configAlertReporterMailToItem:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/mail/to/{idx}/format:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an alert destination.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/alert/reporter/mail/to/{idx}/format
      operationId: configAlertReporterMailToItemFormat:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterMailToItemFormat'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/mail/to/{idx}/format
      operationId: configAlertReporterMailToItemFormat:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailToItemFormat'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/mail/to/{idx}/format
      operationId: configAlertReporterMailToItemFormat:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailToItemFormat'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/mail/to/{idx}/format
      operationId: configAlertReporterMailToItemFormat:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/mail/to/{idx}/min-priority:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an alert destination.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/alert/reporter/mail/to/{idx}/min-priority
      operationId: configAlertReporterMailToItemMinPriority:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterMailToItemMinPriority'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/mail/to/{idx}/min-priority
      operationId: configAlertReporterMailToItemMinPriority:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailToItemMinPriority'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/mail/to/{idx}/min-priority
      operationId: configAlertReporterMailToItemMinPriority:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailToItemMinPriority'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/mail/to/{idx}/min-priority
      operationId: configAlertReporterMailToItemMinPriority:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/reporter/mail/to/{idx}/address:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an alert destination.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/alert/reporter/mail/to/{idx}/address
      operationId: configAlertReporterMailToItemAddress:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertReporterMailToItemAddress'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/reporter/mail/to/{idx}/address
      operationId: configAlertReporterMailToItemAddress:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailToItemAddress'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/reporter/mail/to/{idx}/address
      operationId: configAlertReporterMailToItemAddress:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertReporterMailToItemAddress'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/reporter/mail/to/{idx}/address
      operationId: configAlertReporterMailToItemAddress:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/sys-prio:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /config/alert/sys-prio
      operationId: configAlertSysPrio:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertSysPrio'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/sys-prio
      operationId: configAlertSysPrio:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertSysPrio'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/sys-prio
      operationId: configAlertSysPrio:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertSysPrio'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/sys-prio
      operationId: configAlertSysPrio:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /config/alert/sys-prio/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a system alert.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /config/alert/sys-prio/{idx}
      operationId: configAlertSysPrioItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/configAlertSysPrioItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /config/alert/sys-prio/{idx}
      operationId: configAlertSysPrioItem:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertSysPrioItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /config/alert/sys-prio/{idx}
      operationId: configAlertSysPrioItem:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configAlertSysPrioItem'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /config/alert/sys-prio/{idx}
      operationId: configAlertSysPrioItem:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /ctrl:
    get:
      summary: /ctrl
      operationId: ctrl:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/ctrl'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /ctrl
      operationId: ctrl:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ctrl'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /ctrl
      operationId: ctrl:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ctrl'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /ctrl
      operationId: ctrl:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /ctrl/interface:
    description: Control interface descriptions (read-only).
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /ctrl/interface
      operationId: ctrlInterface:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/ctrlInterface'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /ctrl/interface/{if}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an interface.
        in: path
        name: if
        required: true
        schema:
          type: string
    get:
      summary: /ctrl/interface/{if}
      operationId: ctrlInterfaceIf:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/ctrlInterfaceIf'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /ctrl/interface/{if}/method:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an interface.
        in: path
        name: if
        required: true
        schema:
          type: string
    get:
      summary: /ctrl/interface/{if}/method
      operationId: ctrlInterfaceIfMethod:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/ctrlInterfaceIfMethod'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /ctrl/interface/{if}/method/{name}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an interface.
        in: path
        name: if
        required: true
        schema:
          type: string
      - description: The name of a method.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /ctrl/interface/{if}/method/{name}
      operationId: ctrlInterfaceIfMethodItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/ctrlInterfaceIfMethodItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /ctrl/interface/{if}/method/{name}/name:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an interface.
        in: path
        name: if
        required: true
        schema:
          type: string
      - description: The name of a method.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /ctrl/interface/{if}/method/{name}/name
      operationId: ctrlInterfaceIfMethodItemName:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/ctrlInterfaceIfMethodItemName'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /ctrl/interface/{if}/method/{name}/in:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an interface.
        in: path
        name: if
        required: true
        schema:
          type: string
      - description: The name of a method.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /ctrl/interface/{if}/method/{name}/in
      operationId: ctrlInterfaceIfMethodItemIn:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/ctrlInterfaceIfMethodItemIn'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /ctrl/interface/{if}/method/{name}/in_names:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an interface.
        in: path
        name: if
        required: true
        schema:
          type: string
      - description: The name of a method.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /ctrl/interface/{if}/method/{name}/in_names
      operationId: ctrlInterfaceIfMethodItemInNames:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/ctrlInterfaceIfMethodItemInNames'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /ctrl/interface/{if}/method/{name}/in_names/{argidx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an interface.
        in: path
        name: if
        required: true
        schema:
          type: string
      - description: The name of a method.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a method argument.
        in: path
        name: argidx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /ctrl/interface/{if}/method/{name}/in_names/{argidx}
      operationId: ctrlInterfaceIfMethodItemInNamesItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/ctrlInterfaceIfMethodItemInNamesItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /ctrl/interface/{if}/method/{name}/out:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an interface.
        in: path
        name: if
        required: true
        schema:
          type: string
      - description: The name of a method.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /ctrl/interface/{if}/method/{name}/out
      operationId: ctrlInterfaceIfMethodItemOut:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/ctrlInterfaceIfMethodItemOut'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /ctrl/interface/{if}/method/{name}/doc:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an interface.
        in: path
        name: if
        required: true
        schema:
          type: string
      - description: The name of a method.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /ctrl/interface/{if}/method/{name}/doc
      operationId: ctrlInterfaceIfMethodItemDoc:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/ctrlInterfaceIfMethodItemDoc'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /lua:
    get:
      summary: /lua
      operationId: lua:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/lua'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /lua
      operationId: lua:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lua'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /lua
      operationId: lua:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lua'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /lua
      operationId: lua:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /lua/var:
    get:
      summary: /lua/var
      operationId: luaVar:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/luaVar'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /lua/var
      operationId: luaVar:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luaVar'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /lua/var
      operationId: luaVar:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luaVar'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /lua/var
      operationId: luaVar:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /lua/var/{name}:
    parameters:
      - description: The name of a persistent Lua variable.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /lua/var/{name}
      operationId: luaVarName:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/luaVarName'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /lua/var/{name}
      operationId: luaVarName:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luaVarName'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /lua/var/{name}
      operationId: luaVarName:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luaVarName'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /lua/var/{name}
      operationId: luaVarName:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /lua/var/{name}/value:
    parameters:
      - description: The name of a persistent Lua variable.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /lua/var/{name}/value
      operationId: luaVarNameValue:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/luaVarNameValue'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /lua/var/{name}/value
      operationId: luaVarNameValue:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luaVarNameValue'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /lua/var/{name}/value
      operationId: luaVarNameValue:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luaVarNameValue'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /lua/var/{name}/value
      operationId: luaVarNameValue:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /lua/var/{name}/desc:
    parameters:
      - description: The name of a persistent Lua variable.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /lua/var/{name}/desc
      operationId: luaVarNameDesc:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/luaVarNameDesc'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    put:
      summary: /lua/var/{name}/desc
      operationId: luaVarNameDesc:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luaVarNameDesc'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    post:
      summary: /lua/var/{name}/desc
      operationId: luaVarNameDesc:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/luaVarNameDesc'
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
    delete:
      summary: /lua/var/{name}/desc
      operationId: luaVarNameDesc:delete
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/StatusObject'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys:
    description: System information (read-only).
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys
      operationId: sys:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sys'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/alert:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/alert
      operationId: sysAlert:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysAlert'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/alert/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a system alert.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/alert/{idx}
      operationId: sysAlertItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysAlertItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/alert/{idx}/id:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a system alert.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/alert/{idx}/id
      operationId: sysAlertItemId:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysAlertItemId'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/alert/{idx}/reason:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a system alert.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/alert/{idx}/reason
      operationId: sysAlertItemReason:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysAlertItemReason'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/boot:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/boot
      operationId: sysBoot:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysBoot'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/boot/reason:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/boot/reason
      operationId: sysBootReason:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysBootReason'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/boot/time:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/boot/time
      operationId: sysBootTime:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysBootTime'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/db:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/db
      operationId: sysDb:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysDb'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/db/max-registers:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/db/max-registers
      operationId: sysDbMaxRegisters:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysDbMaxRegisters'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/db/level:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/db/level
      operationId: sysDbLevel:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysDbLevel'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/db/level/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a db level.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/db/level/{idx}
      operationId: sysDbLevelItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysDbLevelItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/db/level/{idx}/interval:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a db level.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/db/level/{idx}/interval
      operationId: sysDbLevelItemInterval:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysDbLevelItemInterval'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/db/level/{idx}/row-count:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a db level.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/db/level/{idx}/row-count
      operationId: sysDbLevelItemRowCount:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysDbLevelItemRowCount'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/db/level/{idx}/volatile:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a db level.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/db/level/{idx}/volatile
      operationId: sysDbLevelItemVolatile:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysDbLevelItemVolatile'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/dev:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/dev
      operationId: sysDev:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysDev'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/dev/serial:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/dev/serial
      operationId: sysDevSerial:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysDevSerial'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/dev/serial/{seridx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a serial port device.
        in: path
        name: seridx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/dev/serial/{seridx}
      operationId: sysDevSerialItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysDevSerialItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/dev/serial/{seridx}/devpath:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a serial port device.
        in: path
        name: seridx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/dev/serial/{seridx}/devpath
      operationId: sysDevSerialItemDevpath:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysDevSerialItemDevpath'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/dev/serial/{seridx}/manufacturer:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a serial port device.
        in: path
        name: seridx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/dev/serial/{seridx}/manufacturer
      operationId: sysDevSerialItemManufacturer:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysDevSerialItemManufacturer'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/dev/serial/{seridx}/product:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a serial port device.
        in: path
        name: seridx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/dev/serial/{seridx}/product
      operationId: sysDevSerialItemProduct:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysDevSerialItemProduct'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/dev/serial/{seridx}/sn:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a serial port device.
        in: path
        name: seridx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/dev/serial/{seridx}/sn
      operationId: sysDevSerialItemSn:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysDevSerialItemSn'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/dev/serial/{seridx}/version:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a serial port device.
        in: path
        name: seridx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/dev/serial/{seridx}/version
      operationId: sysDevSerialItemVersion:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysDevSerialItemVersion'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/func
      operationId: sysFunc:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFunc'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/basic:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/func/basic
      operationId: sysFuncBasic:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncBasic'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/basic/{name}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a eScript basic function.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /sys/func/basic/{name}
      operationId: sysFuncBasicName:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncBasicName'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/basic/{name}/arg:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a eScript basic function.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /sys/func/basic/{name}/arg
      operationId: sysFuncBasicNameArg:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncBasicNameArg'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/basic/{name}/arg/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a eScript basic function.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The name index of a function argument.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/func/basic/{name}/arg/{idx}
      operationId: sysFuncBasicNameArgItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncBasicNameArgItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/basic/{name}/arg/{idx}/name:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a eScript basic function.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The name index of a function argument.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/func/basic/{name}/arg/{idx}/name
      operationId: sysFuncBasicNameArgItemName:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncBasicNameArgItemName'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/basic/{name}/arg/{idx}/type:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a eScript basic function.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The name index of a function argument.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/func/basic/{name}/arg/{idx}/type
      operationId: sysFuncBasicNameArgItemType:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncBasicNameArgItemType'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/basic/{name}/help:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a eScript basic function.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /sys/func/basic/{name}/help
      operationId: sysFuncBasicNameHelp:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncBasicNameHelp'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/basic/{name}/min-args:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a eScript basic function.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /sys/func/basic/{name}/min-args
      operationId: sysFuncBasicNameMinArgs:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncBasicNameMinArgs'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/alert:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/func/alert
      operationId: sysFuncAlert:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncAlert'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/alert/{name}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an eScript alert function.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /sys/func/alert/{name}
      operationId: sysFuncAlertName:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncAlertName'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/alert/{name}/arg:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an eScript alert function.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /sys/func/alert/{name}/arg
      operationId: sysFuncAlertNameArg:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncAlertNameArg'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/alert/{name}/arg/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an eScript alert function.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The name index of a function argument.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/func/alert/{name}/arg/{idx}
      operationId: sysFuncAlertNameArgItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncAlertNameArgItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/alert/{name}/arg/{idx}/name:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an eScript alert function.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The name index of a function argument.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/func/alert/{name}/arg/{idx}/name
      operationId: sysFuncAlertNameArgItemName:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncAlertNameArgItemName'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/alert/{name}/arg/{idx}/type:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an eScript alert function.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The name index of a function argument.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/func/alert/{name}/arg/{idx}/type
      operationId: sysFuncAlertNameArgItemType:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncAlertNameArgItemType'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/alert/{name}/help:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an eScript alert function.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /sys/func/alert/{name}/help
      operationId: sysFuncAlertNameHelp:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncAlertNameHelp'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/func/alert/{name}/min-args:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of an eScript alert function.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /sys/func/alert/{name}/min-args
      operationId: sysFuncAlertNameMinArgs:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysFuncAlertNameMinArgs'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/modbus
      operationId: sysModbus:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbus'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus/client:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/modbus/client
      operationId: sysModbusClient:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbusClient'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus/client/map:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/modbus/client/map
      operationId: sysModbusClientMap:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbusClientMap'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus/client/map/{name}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a builtin Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /sys/modbus/client/map/{name}
      operationId: sysModbusClientMapName:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbusClientMapName'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus/client/map/{name}/option:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a builtin Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /sys/modbus/client/map/{name}/option
      operationId: sysModbusClientMapNameOption:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbusClientMapNameOption'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus/client/map/{name}/option/{sysopt}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a builtin Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The name of a Modbus map option.
        in: path
        name: sysopt
        required: true
        schema:
          type: string
    get:
      summary: /sys/modbus/client/map/{name}/option/{sysopt}
      operationId: sysModbusClientMapNameOptionSysopt:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbusClientMapNameOptionSysopt'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus/client/map/{name}/reg:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a builtin Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
    get:
      summary: /sys/modbus/client/map/{name}/reg
      operationId: sysModbusClientMapNameReg:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbusClientMapNameReg'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus/client/map/{name}/reg/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a builtin Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: idx
        required: true
        schema:
          type: string
    get:
      summary: /sys/modbus/client/map/{name}/reg/{idx}
      operationId: sysModbusClientMapNameRegItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbusClientMapNameRegItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus/client/map/{name}/reg/{idx}/name:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a builtin Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: idx
        required: true
        schema:
          type: string
    get:
      summary: /sys/modbus/client/map/{name}/reg/{idx}/name
      operationId: sysModbusClientMapNameRegItemName:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbusClientMapNameRegItemName'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus/client/map/{name}/reg/{idx}/addr:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a builtin Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: idx
        required: true
        schema:
          type: string
    get:
      summary: /sys/modbus/client/map/{name}/reg/{idx}/addr
      operationId: sysModbusClientMapNameRegItemAddr:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbusClientMapNameRegItemAddr'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus/client/map/{name}/reg/{idx}/type:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a builtin Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: idx
        required: true
        schema:
          type: string
    get:
      summary: /sys/modbus/client/map/{name}/reg/{idx}/type
      operationId: sysModbusClientMapNameRegItemType:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbusClientMapNameRegItemType'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus/client/map/{name}/reg/{idx}/kind:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a builtin Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: idx
        required: true
        schema:
          type: string
    get:
      summary: /sys/modbus/client/map/{name}/reg/{idx}/kind
      operationId: sysModbusClientMapNameRegItemKind:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbusClientMapNameRegItemKind'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus/client/map/{name}/reg/{idx}/unit:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a builtin Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: idx
        required: true
        schema:
          type: string
    get:
      summary: /sys/modbus/client/map/{name}/reg/{idx}/unit
      operationId: sysModbusClientMapNameRegItemUnit:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbusClientMapNameRegItemUnit'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus/client/map/{name}/reg/{idx}/offset:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a builtin Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: idx
        required: true
        schema:
          type: string
    get:
      summary: /sys/modbus/client/map/{name}/reg/{idx}/offset
      operationId: sysModbusClientMapNameRegItemOffset:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbusClientMapNameRegItemOffset'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus/client/map/{name}/reg/{idx}/scale:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a builtin Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: idx
        required: true
        schema:
          type: string
    get:
      summary: /sys/modbus/client/map/{name}/reg/{idx}/scale
      operationId: sysModbusClientMapNameRegItemScale:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbusClientMapNameRegItemScale'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/modbus/client/map/{name}/reg/{idx}/access:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The name of a builtin Modbus map.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The index of a Modbus map register.
        in: path
        name: idx
        required: true
        schema:
          type: string
    get:
      summary: /sys/modbus/client/map/{name}/reg/{idx}/access
      operationId: sysModbusClientMapNameRegItemAccess:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModbusClientMapNameRegItemAccess'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/model:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/model
      operationId: sysModel:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysModel'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/net
      operationId: sysNet:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNet'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ipv4:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/net/ipv4
      operationId: sysNetIpv4:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetIpv4'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ipv4/dhcp:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/net/ipv4/dhcp
      operationId: sysNetIpv4Dhcp:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetIpv4Dhcp'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ipv4/address:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/net/ipv4/address
      operationId: sysNetIpv4Address:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetIpv4Address'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ipv4/broadcast:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/net/ipv4/broadcast
      operationId: sysNetIpv4Broadcast:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetIpv4Broadcast'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ipv4/netmask:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/net/ipv4/netmask
      operationId: sysNetIpv4Netmask:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetIpv4Netmask'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ipv4/network:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/net/ipv4/network
      operationId: sysNetIpv4Network:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetIpv4Network'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ipv4/gateway:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/net/ipv4/gateway
      operationId: sysNetIpv4Gateway:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetIpv4Gateway'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ntp:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/net/ntp
      operationId: sysNetNtp:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetNtp'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ntp/server:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/net/ntp/server
      operationId: sysNetNtpServer:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetNtpServer'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ntp/server/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an NTP server.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/ntp/server/{idx}
      operationId: sysNetNtpServerItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetNtpServerItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ntp/server/{idx}/address:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an NTP server.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/ntp/server/{idx}/address
      operationId: sysNetNtpServerItemAddress:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetNtpServerItemAddress'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ntp/server/{idx}/name:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an NTP server.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/ntp/server/{idx}/name
      operationId: sysNetNtpServerItemName:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetNtpServerItemName'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ntp/server/{idx}/state:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an NTP server.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/ntp/server/{idx}/state
      operationId: sysNetNtpServerItemState:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetNtpServerItemState'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ntp/server/{idx}/weight:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an NTP server.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/ntp/server/{idx}/weight
      operationId: sysNetNtpServerItemWeight:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetNtpServerItemWeight'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ntp/server/{idx}/trust_level:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an NTP server.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/ntp/server/{idx}/trust_level
      operationId: sysNetNtpServerItemTrustLevel:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetNtpServerItemTrustLevel'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ntp/server/{idx}/stratum:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an NTP server.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/ntp/server/{idx}/stratum
      operationId: sysNetNtpServerItemStratum:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetNtpServerItemStratum'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ntp/server/{idx}/next_poll:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an NTP server.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/ntp/server/{idx}/next_poll
      operationId: sysNetNtpServerItemNextPoll:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetNtpServerItemNextPoll'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ntp/server/{idx}/poll_interval:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an NTP server.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/ntp/server/{idx}/poll_interval
      operationId: sysNetNtpServerItemPollInterval:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetNtpServerItemPollInterval'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ntp/server/{idx}/offset:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an NTP server.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/ntp/server/{idx}/offset
      operationId: sysNetNtpServerItemOffset:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetNtpServerItemOffset'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ntp/server/{idx}/delay:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an NTP server.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/ntp/server/{idx}/delay
      operationId: sysNetNtpServerItemDelay:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetNtpServerItemDelay'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/ntp/server/{idx}/jitter:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of an NTP server.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/ntp/server/{idx}/jitter
      operationId: sysNetNtpServerItemJitter:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetNtpServerItemJitter'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/wlan:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/net/wlan
      operationId: sysNetWlan:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetWlan'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/wlan/ap:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/net/wlan/ap
      operationId: sysNetWlanAp:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetWlanAp'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/wlan/ap/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a WLAN access point.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/wlan/ap/{idx}
      operationId: sysNetWlanApItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetWlanApItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/wlan/ap/{idx}/bssid:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a WLAN access point.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/wlan/ap/{idx}/bssid
      operationId: sysNetWlanApItemBssid:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetWlanApItemBssid'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/wlan/ap/{idx}/flags:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a WLAN access point.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/wlan/ap/{idx}/flags
      operationId: sysNetWlanApItemFlags:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetWlanApItemFlags'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/wlan/ap/{idx}/frequency:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a WLAN access point.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/wlan/ap/{idx}/frequency
      operationId: sysNetWlanApItemFrequency:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetWlanApItemFrequency'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/wlan/ap/{idx}/signal_level:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a WLAN access point.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/wlan/ap/{idx}/signal_level
      operationId: sysNetWlanApItemSignalLevel:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetWlanApItemSignalLevel'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/wlan/ap/{idx}/ssid:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a WLAN access point.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/wlan/ap/{idx}/ssid
      operationId: sysNetWlanApItemSsid:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetWlanApItemSsid'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/wlan/net:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/net/wlan/net
      operationId: sysNetWlanNet:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetWlanNet'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/wlan/net/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a WLAN network.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/wlan/net/{idx}
      operationId: sysNetWlanNetItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetWlanNetItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/wlan/net/{idx}/network_id:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a WLAN network.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/wlan/net/{idx}/network_id
      operationId: sysNetWlanNetItemNetworkId:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetWlanNetItemNetworkId'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/wlan/net/{idx}/bssid:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a WLAN network.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/wlan/net/{idx}/bssid
      operationId: sysNetWlanNetItemBssid:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetWlanNetItemBssid'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/wlan/net/{idx}/flags:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a WLAN network.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/wlan/net/{idx}/flags
      operationId: sysNetWlanNetItemFlags:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetWlanNetItemFlags'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/net/wlan/net/{idx}/ssid:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The index of a WLAN network.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/net/wlan/net/{idx}/ssid
      operationId: sysNetWlanNetItemSsid:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysNetWlanNetItemSsid'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/reboot:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/reboot
      operationId: sysReboot:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysReboot'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/sn:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/sn
      operationId: sysSn:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysSn'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/status:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/status
      operationId: sysStatus:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysStatus'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/status/{token}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The token of a long-running operation.
        in: path
        name: token
        required: true
        schema:
          type: string
    get:
      summary: /sys/status/{token}
      operationId: sysStatusToken:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysStatusToken'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/status/{token}/args:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The token of a long-running operation.
        in: path
        name: token
        required: true
        schema:
          type: string
    get:
      summary: /sys/status/{token}/args
      operationId: sysStatusTokenArgs:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysStatusTokenArgs'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/status/{token}/args/{idx}:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The token of a long-running operation.
        in: path
        name: token
        required: true
        schema:
          type: string
      - description: The index of a status argument.
        in: path
        name: idx
        required: true
        schema:
          minimum: 0
          type: integer
    get:
      summary: /sys/status/{token}/args/{idx}
      operationId: sysStatusTokenArgsItem:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysStatusTokenArgsItem'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/status/{token}/done:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The token of a long-running operation.
        in: path
        name: token
        required: true
        schema:
          type: string
    get:
      summary: /sys/status/{token}/done
      operationId: sysStatusTokenDone:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysStatusTokenDone'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/status/{token}/error:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The token of a long-running operation.
        in: path
        name: token
        required: true
        schema:
          type: string
    get:
      summary: /sys/status/{token}/error
      operationId: sysStatusTokenError:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysStatusTokenError'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/status/{token}/info:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The token of a long-running operation.
        in: path
        name: token
        required: true
        schema:
          type: string
    get:
      summary: /sys/status/{token}/info
      operationId: sysStatusTokenInfo:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysStatusTokenInfo'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/status/{token}/progress:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The token of a long-running operation.
        in: path
        name: token
        required: true
        schema:
          type: string
    get:
      summary: /sys/status/{token}/progress
      operationId: sysStatusTokenProgress:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysStatusTokenProgress'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/status/{token}/ts:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
      - description: The token of a long-running operation.
        in: path
        name: token
        required: true
        schema:
          type: string
    get:
      summary: /sys/status/{token}/ts
      operationId: sysStatusTokenTs:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysStatusTokenTs'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/time:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/time
      operationId: sysTime:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysTime'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/uptime:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/uptime
      operationId: sysUptime:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysUptime'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/version:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/version
      operationId: sysVersion:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysVersion'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/version/firmware:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/version/firmware
      operationId: sysVersionFirmware:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysVersionFirmware'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
  /sys/version/kernel:
    parameters:
      - $ref: '#/components/parameters/maxDepthParam'
      - $ref: '#/components/parameters/filterParam'
    get:
      summary: /sys/version/kernel
      operationId: sysVersionKernel:get
      responses:
        '200':
          description: Normal response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/sysVersionKernel'
                  error:
                    $ref: '#/components/schemas/ErrorString'
        '401':
          description: Unauthorized response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedObject'
components:
  parameters:
    maxDepthParam:
      name: max-depth
      in: query
      description: Limit depth of a `GET` response to this value. When this limit is reached, only a list of member names is output for objects and only the length is output for arrays.
      schema:
        type: integer
        minimum: 1
      example: 1
    filterParam:
      name: filter
      in: query
      description: |-
        Filter `GET` response with this string.  This can be used to return only certain members of an object or certain indices of an array.  For example, `{foo,bar}` limits the output of an object to the members with names `foo` and `bar`.  The empty member filter `{}` returns all members of an object.  Similarly, `[0,3:5]` limits the output to the array elements with index 0, 3, 4, or 5. The empty index filter `[]` returns all members of an array. Indexing and member filters may be nested.  For example, `[]{addr}` returns member `addr` from all elements of an array.

        Note that braces and square brackets normally need to be percent-encoded before using them in a URL (e.g., `%7B` for `{`).
      schema:
        type: string
      examples:
        select_members:
          value: '{foo,bar}'
          summary: select members "foo" and "bar" only
        select_indices:
          value: '[0,3:5]'
          summary: select only array items with index 0, 3, 4, and 5
        nesting_example:
          value: '{reg[7:8{addr}]}'
          summary: nested filter spec example
          description: Selects all members of the top-level object.  Within the values of those members, only the `reg` member is selected. Of the `reg` arrays, items for indices 7 and 8 are selected and, within those, member `addr` is selected.
    afterParam:
      name: after
      in: query
      description: Limits the output to messages with a timestamp that is newer than the value specified by this parameter.  The timestamp is expressed as a decimal number which is interpreted as seconds. A fractional part may be specified for sub-second resolution.
      schema:
        type: number
      example: 1676670965.155
  securitySchemes:
    ApiKey:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    DigestObject:
      type: object
      properties:
        rlm:
          type: string
          description: The authentication realm as returned in a 401 response.
          example: eGauge Administration
        usr:
          type: string
          description: The username to authenticate with.
          example: owner
        nnc:
          type: string
          description: The server nonce as returned in a 401 response.
          example: eyJ0eXAi...w5GCvM
        cnnc:
          type: string
          description: A client-selected nonce.  This should be generated with a cryptographically strong random number generator.
          example: 565ce9541eddec103347b5174704e188
        hash:
          type: string
          description: |-
            The hash which proves that the client possesses the password of the specified username.  This must be calculated as the MD5 hash of the string obtained by concatenating *ha1*, a colon, *nnc*, a colon, and *cnnc*. *nnc* is the server nonce returned in a 401 response, *cnnc* is the client-selected nonce, and *ha1* is the string obtained by calculating the MD5 hash of the string obtained by concatenating the username *usr*, a colon, realm *rlm*, a colon, and password *pwd*.  More formally:
            > *ha1 = MD5(usr:rlm:pwd)*
            > *hash = MD5(ha1:nnc:cnnc)* 
          example: ce5e308c27da651964de14f65bd8b059
      required:
        - rlm
        - usr
        - nnc
        - cnnc
        - hash
    PasswordObject:
      type: object
      properties:
        rlm:
          type: string
          description: The authentication realm as returned in a 401 response.
          example: eGauge Administration
        usr:
          type: string
          description: The username to authenticate with.
          example: owner
        pwd:
          type: string
          format: password
          description: The password to authenticate with.
          example: secrets-secrets
      required:
        - rlm
        - usr
        - pwd
    ErrorString:
      type: string
      description: A message describing the first error that occurred (if any).
      example: Error message (only present if an error occurred).
    JWTObject:
      type: object
      properties:
        jwt:
          type: string
          format: jwt
          description: A JWT which can be used to authenticate accesses to protected resources.
          example: eyJ0eXAi...aQvQxY
        error:
          $ref: '#/components/schemas/ErrorString'
    StatusObject:
      properties:
        status:
          type: string
          description: A string describing the successful completion of an operation.
          example: OK
        error:
          $ref: '#/components/schemas/ErrorString'
    UnauthorizedObject:
      description: Unauthorized response.
      properties:
        rlm:
          type: string
          description: The authentication realm.
          example: eGauge Administration
        nnc:
          type: string
          description: The server nonce to use for obtaining JWT token via the digest protocol.
          example: eyJ0eXAi...w5GCvM
        error:
          $ref: '#/components/schemas/ErrorString'
          description: The reason the 401 response was returned.
          example: Authentication required.
    RightsObject:
      properties:
        usr:
          type: string
          description: The username of the authenticated user.
          example: owner
        rights:
          description: |-
            The array of rights the user possesses.  Possible rights are:
            1) `save`: The user has the right to change (save) the meter configuration.
            1) `ctrl`: The user has the right to perform control operations such as putting a device in a particular operational state (e.g., opening or closing a relay or setting the temperature on a thermostat).  The device being controlled may be a remote device attached to the meter implementing this API.
          type: array
          items:
            type: string
            enum:
              - save
              - ctrl
          example:
            - save
            - ctrl
    KernelLogObject:
      type: object
      properties:
        log:
          type: array
          items:
            type: object
            properties:
              prio:
                type: integer
                minimum: 0
                example: 7
              ts:
                type: number
                example: 1.2516333
              msg:
                type: string
                example: |-
                  Multiple lines...
                  ...are possible.
          example: '[{"prio":6,"ts":"6.9801816","msg":"    6.980181] ehci-atmel: EHCI Atmel driver"},{"prio":6,"ts":"6.9886136","msg":"    6.988613] atmel-ehci 500000.ehci: EHCI Host Controller"}]'
        error:
          $ref: '#/components/schemas/ErrorString'
    configBacnetServerBipPort:
      type: integer
    configBacnetServerBip:
      type: object
      properties:
        port:
          $ref: '#/components/schemas/configBacnetServerBipPort'
    configBacnetServerEnableItem:
      type: string
    configBacnetServerEnable:
      type: array
      items:
        $ref: '#/components/schemas/configBacnetServerEnableItem'
    configBacnetServerEpochRelative:
      type: boolean
    configBacnetServerId:
      type: integer
    configBacnetServerMstpMac:
      type: integer
    configBacnetServerMstpMaxMac:
      type: integer
    configBacnetServerMstpPort:
      type: string
    configBacnetServerMstp:
      type: object
      properties:
        mac:
          $ref: '#/components/schemas/configBacnetServerMstpMac'
        max-mac:
          $ref: '#/components/schemas/configBacnetServerMstpMaxMac'
        port:
          $ref: '#/components/schemas/configBacnetServerMstpPort'
    configBacnetServer:
      type: object
      properties:
        bip:
          $ref: '#/components/schemas/configBacnetServerBip'
        enable:
          $ref: '#/components/schemas/configBacnetServerEnable'
        epoch-relative:
          $ref: '#/components/schemas/configBacnetServerEpochRelative'
        id:
          $ref: '#/components/schemas/configBacnetServerId'
        mstp:
          $ref: '#/components/schemas/configBacnetServerMstp'
    configBacnet:
      type: object
      properties:
        server:
          $ref: '#/components/schemas/configBacnetServer'
    configDbEpoch:
      type: string
    configDb:
      type: object
      properties:
        epoch:
          $ref: '#/components/schemas/configDbEpoch'
    configDisplayBacklightBrightness:
      type: integer
    configDisplayBacklightDuration:
      type: integer
    configDisplayBacklight:
      type: object
      properties:
        brightness:
          $ref: '#/components/schemas/configDisplayBacklightBrightness'
        duration:
          $ref: '#/components/schemas/configDisplayBacklightDuration'
    configDisplayContrast:
      type: integer
    configDisplayFontset:
      type: string
    configDisplayScreenRegistersRegidx:
      type: string
    configDisplayScreenRegisters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/configDisplayScreenRegistersRegidx'
    configDisplayScreen:
      type: object
      properties:
        registers:
          $ref: '#/components/schemas/configDisplayScreenRegisters'
    configDisplayOrientation:
      type: integer
    configDisplay:
      type: object
      properties:
        backlight:
          $ref: '#/components/schemas/configDisplayBacklight'
        contrast:
          $ref: '#/components/schemas/configDisplayContrast'
        fontset:
          $ref: '#/components/schemas/configDisplayFontset'
        screen:
          $ref: '#/components/schemas/configDisplayScreen'
        orientation:
          $ref: '#/components/schemas/configDisplayOrientation'
    configLanguageCode:
      type: string
    configLocalSensorIdxChannelBias:
      type: number
    configLocalSensorIdxChannelMode:
      type: string
    configLocalSensorIdxChannelScale:
      type: number
    configLocalSensorIdxChannel:
      type: object
      properties:
        bias:
          $ref: '#/components/schemas/configLocalSensorIdxChannelBias'
        mode:
          $ref: '#/components/schemas/configLocalSensorIdxChannelMode'
        scale:
          $ref: '#/components/schemas/configLocalSensorIdxChannelScale'
    configLocalSensorIdxError:
      type: number
    configLocalSensorIdxModel:
      type: string
    configLocalSensorIdxPhase:
      type: string
    configLocalSensorIdx:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/configLocalSensorIdxChannel'
        error:
          $ref: '#/components/schemas/configLocalSensorIdxError'
        model:
          $ref: '#/components/schemas/configLocalSensorIdxModel'
        phase:
          $ref: '#/components/schemas/configLocalSensorIdxPhase'
    configLocalSensor:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/configLocalSensorIdx'
    configLocalGain:
      type: string
    configLocalUpdateInterval:
      type: integer
    configLocal:
      type: object
      properties:
        sensor:
          $ref: '#/components/schemas/configLocalSensor'
        gain:
          $ref: '#/components/schemas/configLocalGain'
        update-interval:
          $ref: '#/components/schemas/configLocalUpdateInterval'
    configLocationLatitude:
      type: number
    configLocationLongitude:
      type: number
    configLocation:
      type: object
      properties:
        latitude:
          $ref: '#/components/schemas/configLocationLatitude'
        longitude:
          $ref: '#/components/schemas/configLocationLongitude'
    configLogSystemSize:
      type: integer
    configLogSystem:
      type: object
      properties:
        size:
          $ref: '#/components/schemas/configLogSystemSize'
    configLog:
      type: object
      properties:
        system:
          $ref: '#/components/schemas/configLogSystem'
    configLuaScriptAlertd:
      type: string
    configLuaScriptTariff:
      type: string
    configLuaScriptTeamd:
      type: string
    configLuaScript:
      type: object
      properties:
        alertd:
          $ref: '#/components/schemas/configLuaScriptAlertd'
        tariff:
          $ref: '#/components/schemas/configLuaScriptTariff'
        teamd:
          $ref: '#/components/schemas/configLuaScriptTeamd'
    configLuaCtrldScript:
      type: string
    configLuaCtrld:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/configLuaCtrldScript'
    configLua:
      type: object
      properties:
        script:
          $ref: '#/components/schemas/configLuaScript'
        ctrld:
          $ref: '#/components/schemas/configLuaCtrld'
    configModbusClientMapNameOptionOpt:
      type: string
    configModbusClientMapNameOption:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/configModbusClientMapNameOptionOpt'
    configModbusClientMapNameRegItemName:
      type: string
    configModbusClientMapNameRegItemAddr:
      type: integer
    configModbusClientMapNameRegItemType:
      type: string
    configModbusClientMapNameRegItemKind:
      type: string
    configModbusClientMapNameRegItemUnit:
      type: string
    configModbusClientMapNameRegItemOffset:
      type: number
    configModbusClientMapNameRegItemScale:
      type: number
    configModbusClientMapNameRegItemAccess:
      type: string
    configModbusClientMapNameRegItem:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/configModbusClientMapNameRegItemName'
        addr:
          $ref: '#/components/schemas/configModbusClientMapNameRegItemAddr'
        type:
          $ref: '#/components/schemas/configModbusClientMapNameRegItemType'
        kind:
          $ref: '#/components/schemas/configModbusClientMapNameRegItemKind'
        unit:
          $ref: '#/components/schemas/configModbusClientMapNameRegItemUnit'
        offset:
          $ref: '#/components/schemas/configModbusClientMapNameRegItemOffset'
        scale:
          $ref: '#/components/schemas/configModbusClientMapNameRegItemScale'
        access:
          $ref: '#/components/schemas/configModbusClientMapNameRegItemAccess'
    configModbusClientMapNameReg:
      type: array
      items:
        $ref: '#/components/schemas/configModbusClientMapNameRegItem'
    configModbusClientMapName:
      type: object
      properties:
        option:
          $ref: '#/components/schemas/configModbusClientMapNameOption'
        reg:
          $ref: '#/components/schemas/configModbusClientMapNameReg'
    configModbusClientMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/configModbusClientMapName'
    configModbusClient:
      type: object
      properties:
        map:
          $ref: '#/components/schemas/configModbusClientMap'
    configModbusServerEnableItem:
      type: string
    configModbusServerEnable:
      type: array
      items:
        $ref: '#/components/schemas/configModbusServerEnableItem'
    configModbusServerId:
      type: integer
    configModbusServerRtuPort:
      type: string
    configModbusServerRtu:
      type: object
      properties:
        port:
          $ref: '#/components/schemas/configModbusServerRtuPort'
    configModbusServerTcpPort:
      type: integer
    configModbusServerTcp:
      type: object
      properties:
        port:
          $ref: '#/components/schemas/configModbusServerTcpPort'
    configModbusServer:
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/configModbusServerEnable'
        id:
          $ref: '#/components/schemas/configModbusServerId'
        rtu:
          $ref: '#/components/schemas/configModbusServerRtu'
        tcp:
          $ref: '#/components/schemas/configModbusServerTcp'
    configModbus:
      type: object
      properties:
        client:
          $ref: '#/components/schemas/configModbusClient'
        server:
          $ref: '#/components/schemas/configModbusServer'
    configNetEthernetWatchdog:
      type: boolean
    configNetEthernet:
      type: object
      properties:
        watchdog:
          $ref: '#/components/schemas/configNetEthernetWatchdog'
    configNetHomeplugRegion:
      type: string
    configNetHomeplug:
      type: object
      properties:
        region:
          $ref: '#/components/schemas/configNetHomeplugRegion'
    configNetHostname:
      type: string
    configNetHttpClientInsecure:
      type: boolean
    configNetHttpClient:
      type: object
      properties:
        insecure:
          $ref: '#/components/schemas/configNetHttpClientInsecure'
    configNetHttpCertificate:
      type: string
    configNetHttpCgiBin:
      type: string
    configNetHttp:
      type: object
      properties:
        client:
          $ref: '#/components/schemas/configNetHttpClient'
        certificate:
          $ref: '#/components/schemas/configNetHttpCertificate'
        cgi-bin:
          $ref: '#/components/schemas/configNetHttpCgiBin'
    configNetIpv4Dhcp:
      type: boolean
    configNetIpv4Address:
      type: string
    configNetIpv4Broadcast:
      type: string
    configNetIpv4Netmask:
      type: string
    configNetIpv4Network:
      type: string
    configNetIpv4Gateway:
      type: string
    configNetIpv4:
      type: object
      properties:
        dhcp:
          $ref: '#/components/schemas/configNetIpv4Dhcp'
        address:
          $ref: '#/components/schemas/configNetIpv4Address'
        broadcast:
          $ref: '#/components/schemas/configNetIpv4Broadcast'
        netmask:
          $ref: '#/components/schemas/configNetIpv4Netmask'
        network:
          $ref: '#/components/schemas/configNetIpv4Network'
        gateway:
          $ref: '#/components/schemas/configNetIpv4Gateway'
    configNetGoproxyEnable:
      type: boolean
    configNetGoproxyServer:
      type: string
    configNetGoproxy:
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/configNetGoproxyEnable'
        server:
          $ref: '#/components/schemas/configNetGoproxyServer'
    configNetNameserverServerItem:
      type: string
    configNetNameserverServer:
      type: array
      items:
        $ref: '#/components/schemas/configNetNameserverServerItem'
    configNetNameserver:
      type: object
      properties:
        server:
          $ref: '#/components/schemas/configNetNameserverServer'
    configNetNtpServerItem:
      type: string
    configNetNtpServer:
      type: array
      items:
        $ref: '#/components/schemas/configNetNtpServerItem'
    configNetNtp:
      type: object
      properties:
        server:
          $ref: '#/components/schemas/configNetNtpServer'
    configNetProxyEnable:
      type: boolean
    configNetProxyServer:
      type: string
    configNetProxy:
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/configNetProxyEnable'
        server:
          $ref: '#/components/schemas/configNetProxyServer'
    configNetPtpClientOnly:
      type: boolean
    configNetPtpInterfaceIdxTransport:
      type: string
    configNetPtpInterfaceIdx:
      type: object
      properties:
        transport:
          $ref: '#/components/schemas/configNetPtpInterfaceIdxTransport'
    configNetPtpInterface:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/configNetPtpInterfaceIdx'
    configNetPtp:
      type: object
      properties:
        client_only:
          $ref: '#/components/schemas/configNetPtpClientOnly'
        interface:
          $ref: '#/components/schemas/configNetPtpInterface'
    configNet:
      type: object
      properties:
        ethernet:
          $ref: '#/components/schemas/configNetEthernet'
        homeplug:
          $ref: '#/components/schemas/configNetHomeplug'
        hostname:
          $ref: '#/components/schemas/configNetHostname'
        http:
          $ref: '#/components/schemas/configNetHttp'
        ipv4:
          $ref: '#/components/schemas/configNetIpv4'
        goproxy:
          $ref: '#/components/schemas/configNetGoproxy'
        nameserver:
          $ref: '#/components/schemas/configNetNameserver'
        ntp:
          $ref: '#/components/schemas/configNetNtp'
        proxy:
          $ref: '#/components/schemas/configNetProxy'
        ptp:
          $ref: '#/components/schemas/configNetPtp'
    configPushInterval:
      type: integer
    configPushOptions:
      type: string
    configPushPassword:
      type: string
    configPushService:
      type: string
    configPushUri:
      type: string
    configPushUser:
      type: string
    configPush:
      type: object
      properties:
        interval:
          $ref: '#/components/schemas/configPushInterval'
        options:
          $ref: '#/components/schemas/configPushOptions'
        password:
          $ref: '#/components/schemas/configPushPassword'
        service:
          $ref: '#/components/schemas/configPushService'
        uri:
          $ref: '#/components/schemas/configPushUri'
        user:
          $ref: '#/components/schemas/configPushUser'
    configRegisterPhysicalRegDev:
      type: string
    configRegisterPhysicalRegDid:
      type: integer
    configRegisterPhysicalRegType:
      type: string
    configRegisterPhysicalRegValue:
      type: string
    configRegisterPhysicalReg:
      type: object
      properties:
        dev:
          $ref: '#/components/schemas/configRegisterPhysicalRegDev'
        did:
          $ref: '#/components/schemas/configRegisterPhysicalRegDid'
        type:
          $ref: '#/components/schemas/configRegisterPhysicalRegType'
        value:
          $ref: '#/components/schemas/configRegisterPhysicalRegValue'
    configRegisterPhysical:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/configRegisterPhysicalReg'
    configRegisterVirtualRegValueItemOp:
      type: string
    configRegisterVirtualRegValueItemRegister:
      type: string
    configRegisterVirtualRegValueItem:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/configRegisterVirtualRegValueItemOp'
        register:
          $ref: '#/components/schemas/configRegisterVirtualRegValueItemRegister'
    configRegisterVirtualRegValue:
      type: array
      items:
        $ref: '#/components/schemas/configRegisterVirtualRegValueItem'
    configRegisterVirtualReg:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/configRegisterVirtualRegValue'
    configRegisterVirtual:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/configRegisterVirtualReg'
    configRegister:
      type: object
      properties:
        physical:
          $ref: '#/components/schemas/configRegisterPhysical'
        virtual:
          $ref: '#/components/schemas/configRegisterVirtual'
    configTimeZone:
      type: string
    configTime:
      type: object
      properties:
        zone:
          $ref: '#/components/schemas/configTimeZone'
    configUserNamePrivItem:
      type: string
    configUserNamePriv:
      type: array
      items:
        $ref: '#/components/schemas/configUserNamePrivItem'
    configUserNameHash:
      type: string
    configUserName:
      type: object
      properties:
        priv:
          $ref: '#/components/schemas/configUserNamePriv'
        hash:
          $ref: '#/components/schemas/configUserNameHash'
    configUser:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/configUserName'
    configAlertCustomItemName:
      type: string
    configAlertCustomItemDetail:
      type: string
    configAlertCustomItemFrequency:
      type: string
    configAlertCustomItemPriority:
      type: integer
    configAlertCustomItemCondLhs:
      type: string
    configAlertCustomItemCondOp:
      type: string
    configAlertCustomItemCondRhs:
      type: string
    configAlertCustomItemCond:
      type: object
      properties:
        lhs:
          $ref: '#/components/schemas/configAlertCustomItemCondLhs'
        op:
          $ref: '#/components/schemas/configAlertCustomItemCondOp'
        rhs:
          $ref: '#/components/schemas/configAlertCustomItemCondRhs'
    configAlertCustomItem:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/configAlertCustomItemName'
        detail:
          $ref: '#/components/schemas/configAlertCustomItemDetail'
        frequency:
          $ref: '#/components/schemas/configAlertCustomItemFrequency'
        priority:
          $ref: '#/components/schemas/configAlertCustomItemPriority'
        cond:
          $ref: '#/components/schemas/configAlertCustomItemCond'
    configAlertCustom:
      type: array
      items:
        $ref: '#/components/schemas/configAlertCustomItem'
    configAlertReporterWebMinPriority:
      type: integer
    configAlertReporterWebService:
      type: string
    configAlertReporterWebUri:
      type: string
    configAlertReporterWebOptions:
      type: string
    configAlertReporterWebUser:
      type: string
    configAlertReporterWebPassword:
      type: string
    configAlertReporterWeb:
      type: object
      properties:
        min-priority:
          $ref: '#/components/schemas/configAlertReporterWebMinPriority'
        service:
          $ref: '#/components/schemas/configAlertReporterWebService'
        uri:
          $ref: '#/components/schemas/configAlertReporterWebUri'
        options:
          $ref: '#/components/schemas/configAlertReporterWebOptions'
        user:
          $ref: '#/components/schemas/configAlertReporterWebUser'
        password:
          $ref: '#/components/schemas/configAlertReporterWebPassword'
    configAlertReporterMailServer:
      type: string
    configAlertReporterMailUser:
      type: string
    configAlertReporterMailPassword:
      type: string
    configAlertReporterMailFromAddress:
      type: string
    configAlertReporterMailToItemFormat:
      type: string
    configAlertReporterMailToItemMinPriority:
      type: integer
    configAlertReporterMailToItemAddress:
      type: string
    configAlertReporterMailToItem:
      type: object
      properties:
        format:
          $ref: '#/components/schemas/configAlertReporterMailToItemFormat'
        min-priority:
          $ref: '#/components/schemas/configAlertReporterMailToItemMinPriority'
        address:
          $ref: '#/components/schemas/configAlertReporterMailToItemAddress'
    configAlertReporterMailTo:
      type: array
      items:
        $ref: '#/components/schemas/configAlertReporterMailToItem'
    configAlertReporterMail:
      type: object
      properties:
        server:
          $ref: '#/components/schemas/configAlertReporterMailServer'
        user:
          $ref: '#/components/schemas/configAlertReporterMailUser'
        password:
          $ref: '#/components/schemas/configAlertReporterMailPassword'
        from-address:
          $ref: '#/components/schemas/configAlertReporterMailFromAddress'
        to:
          $ref: '#/components/schemas/configAlertReporterMailTo'
    configAlertReporter:
      type: object
      properties:
        web:
          $ref: '#/components/schemas/configAlertReporterWeb'
        mail:
          $ref: '#/components/schemas/configAlertReporterMail'
    configAlertSysPrioItem:
      type: integer
    configAlertSysPrio:
      type: array
      items:
        $ref: '#/components/schemas/configAlertSysPrioItem'
    configAlert:
      type: object
      properties:
        custom:
          $ref: '#/components/schemas/configAlertCustom'
        reporter:
          $ref: '#/components/schemas/configAlertReporter'
        sys-prio:
          $ref: '#/components/schemas/configAlertSysPrio'
    config:
      type: object
      properties:
        bacnet:
          $ref: '#/components/schemas/configBacnet'
        db:
          $ref: '#/components/schemas/configDb'
        display:
          $ref: '#/components/schemas/configDisplay'
        language_code:
          $ref: '#/components/schemas/configLanguageCode'
        local:
          $ref: '#/components/schemas/configLocal'
        location:
          $ref: '#/components/schemas/configLocation'
        log:
          $ref: '#/components/schemas/configLog'
        lua:
          $ref: '#/components/schemas/configLua'
        modbus:
          $ref: '#/components/schemas/configModbus'
        net:
          $ref: '#/components/schemas/configNet'
        push:
          $ref: '#/components/schemas/configPush'
        register:
          $ref: '#/components/schemas/configRegister'
        time:
          $ref: '#/components/schemas/configTime'
        user:
          $ref: '#/components/schemas/configUser'
        alert:
          $ref: '#/components/schemas/configAlert'
    ctrlInterfaceIfMethodItemName:
      type: string
    ctrlInterfaceIfMethodItemIn:
      type: string
    ctrlInterfaceIfMethodItemInNamesItem:
      type: string
    ctrlInterfaceIfMethodItemInNames:
      type: array
      items:
        $ref: '#/components/schemas/ctrlInterfaceIfMethodItemInNamesItem'
    ctrlInterfaceIfMethodItemOut:
      type: string
    ctrlInterfaceIfMethodItemDoc:
      type: string
    ctrlInterfaceIfMethodItem:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ctrlInterfaceIfMethodItemName'
        in:
          $ref: '#/components/schemas/ctrlInterfaceIfMethodItemIn'
        in_names:
          $ref: '#/components/schemas/ctrlInterfaceIfMethodItemInNames'
        out:
          $ref: '#/components/schemas/ctrlInterfaceIfMethodItemOut'
        doc:
          $ref: '#/components/schemas/ctrlInterfaceIfMethodItemDoc'
    ctrlInterfaceIfMethod:
      type: array
      items:
        $ref: '#/components/schemas/ctrlInterfaceIfMethodItem'
    ctrlInterfaceIf:
      type: object
      properties:
        method:
          $ref: '#/components/schemas/ctrlInterfaceIfMethod'
    ctrlInterface:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ctrlInterfaceIf'
    ctrl:
      type: object
      properties:
        interface:
          $ref: '#/components/schemas/ctrlInterface'
    luaVarNameValue:
      type: string
    luaVarNameDesc:
      type: string
    luaVarName:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/luaVarNameValue'
        desc:
          $ref: '#/components/schemas/luaVarNameDesc'
    luaVar:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/luaVarName'
    lua:
      type: object
      properties:
        var:
          $ref: '#/components/schemas/luaVar'
    sysAlertItemId:
      type: string
    sysAlertItemReason:
      type: string
    sysAlertItem:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/sysAlertItemId'
        reason:
          $ref: '#/components/schemas/sysAlertItemReason'
    sysAlert:
      type: array
      items:
        $ref: '#/components/schemas/sysAlertItem'
    sysBootReason:
      type: string
    sysBootTime:
      type: string
    sysBoot:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/sysBootReason'
        time:
          $ref: '#/components/schemas/sysBootTime'
    sysDbMaxRegisters:
      type: integer
    sysDbLevelItemInterval:
      type: integer
    sysDbLevelItemRowCount:
      type: integer
    sysDbLevelItemVolatile:
      type: boolean
    sysDbLevelItem:
      type: object
      properties:
        interval:
          $ref: '#/components/schemas/sysDbLevelItemInterval'
        row-count:
          $ref: '#/components/schemas/sysDbLevelItemRowCount'
        volatile:
          $ref: '#/components/schemas/sysDbLevelItemVolatile'
    sysDbLevel:
      type: array
      items:
        $ref: '#/components/schemas/sysDbLevelItem'
    sysDb:
      type: object
      properties:
        max-registers:
          $ref: '#/components/schemas/sysDbMaxRegisters'
        level:
          $ref: '#/components/schemas/sysDbLevel'
    sysDevSerialItemDevpath:
      type: string
    sysDevSerialItemManufacturer:
      type: string
    sysDevSerialItemProduct:
      type: string
    sysDevSerialItemSn:
      type: string
    sysDevSerialItemVersion:
      type: string
    sysDevSerialItem:
      type: object
      properties:
        devpath:
          $ref: '#/components/schemas/sysDevSerialItemDevpath'
        manufacturer:
          $ref: '#/components/schemas/sysDevSerialItemManufacturer'
        product:
          $ref: '#/components/schemas/sysDevSerialItemProduct'
        sn:
          $ref: '#/components/schemas/sysDevSerialItemSn'
        version:
          $ref: '#/components/schemas/sysDevSerialItemVersion'
    sysDevSerial:
      type: array
      items:
        $ref: '#/components/schemas/sysDevSerialItem'
    sysDev:
      type: object
      properties:
        serial:
          $ref: '#/components/schemas/sysDevSerial'
    sysFuncBasicNameArgItemName:
      type: string
    sysFuncBasicNameArgItemType:
      type: string
    sysFuncBasicNameArgItem:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/sysFuncBasicNameArgItemName'
        type:
          $ref: '#/components/schemas/sysFuncBasicNameArgItemType'
    sysFuncBasicNameArg:
      type: array
      items:
        $ref: '#/components/schemas/sysFuncBasicNameArgItem'
    sysFuncBasicNameHelp:
      type: string
    sysFuncBasicNameMinArgs:
      type: string
    sysFuncBasicName:
      type: object
      properties:
        arg:
          $ref: '#/components/schemas/sysFuncBasicNameArg'
        help:
          $ref: '#/components/schemas/sysFuncBasicNameHelp'
        min-args:
          $ref: '#/components/schemas/sysFuncBasicNameMinArgs'
    sysFuncBasic:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/sysFuncBasicName'
    sysFuncAlertNameArgItemName:
      type: string
    sysFuncAlertNameArgItemType:
      type: string
    sysFuncAlertNameArgItem:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/sysFuncAlertNameArgItemName'
        type:
          $ref: '#/components/schemas/sysFuncAlertNameArgItemType'
    sysFuncAlertNameArg:
      type: array
      items:
        $ref: '#/components/schemas/sysFuncAlertNameArgItem'
    sysFuncAlertNameHelp:
      type: string
    sysFuncAlertNameMinArgs:
      type: string
    sysFuncAlertName:
      type: object
      properties:
        arg:
          $ref: '#/components/schemas/sysFuncAlertNameArg'
        help:
          $ref: '#/components/schemas/sysFuncAlertNameHelp'
        min-args:
          $ref: '#/components/schemas/sysFuncAlertNameMinArgs'
    sysFuncAlert:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/sysFuncAlertName'
    sysFunc:
      type: object
      properties:
        basic:
          $ref: '#/components/schemas/sysFuncBasic'
        alert:
          $ref: '#/components/schemas/sysFuncAlert'
    sysModbusClientMapNameOptionSysopt:
      type: string
    sysModbusClientMapNameOption:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/sysModbusClientMapNameOptionSysopt'
    sysModbusClientMapNameRegItemName:
      type: string
    sysModbusClientMapNameRegItemAddr:
      type: integer
    sysModbusClientMapNameRegItemType:
      type: string
    sysModbusClientMapNameRegItemKind:
      type: string
    sysModbusClientMapNameRegItemUnit:
      type: string
    sysModbusClientMapNameRegItemOffset:
      type: number
    sysModbusClientMapNameRegItemScale:
      type: number
    sysModbusClientMapNameRegItemAccess:
      type: string
    sysModbusClientMapNameRegItem:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/sysModbusClientMapNameRegItemName'
        addr:
          $ref: '#/components/schemas/sysModbusClientMapNameRegItemAddr'
        type:
          $ref: '#/components/schemas/sysModbusClientMapNameRegItemType'
        kind:
          $ref: '#/components/schemas/sysModbusClientMapNameRegItemKind'
        unit:
          $ref: '#/components/schemas/sysModbusClientMapNameRegItemUnit'
        offset:
          $ref: '#/components/schemas/sysModbusClientMapNameRegItemOffset'
        scale:
          $ref: '#/components/schemas/sysModbusClientMapNameRegItemScale'
        access:
          $ref: '#/components/schemas/sysModbusClientMapNameRegItemAccess'
    sysModbusClientMapNameReg:
      type: array
      items:
        $ref: '#/components/schemas/sysModbusClientMapNameRegItem'
    sysModbusClientMapName:
      type: object
      properties:
        option:
          $ref: '#/components/schemas/sysModbusClientMapNameOption'
        reg:
          $ref: '#/components/schemas/sysModbusClientMapNameReg'
    sysModbusClientMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/sysModbusClientMapName'
    sysModbusClient:
      type: object
      properties:
        map:
          $ref: '#/components/schemas/sysModbusClientMap'
    sysModbus:
      type: object
      properties:
        client:
          $ref: '#/components/schemas/sysModbusClient'
    sysModel:
      type: string
    sysNetIpv4Dhcp:
      type: boolean
    sysNetIpv4Address:
      type: string
    sysNetIpv4Broadcast:
      type: string
    sysNetIpv4Netmask:
      type: string
    sysNetIpv4Network:
      type: string
    sysNetIpv4Gateway:
      type: string
    sysNetIpv4:
      type: object
      properties:
        dhcp:
          $ref: '#/components/schemas/sysNetIpv4Dhcp'
        address:
          $ref: '#/components/schemas/sysNetIpv4Address'
        broadcast:
          $ref: '#/components/schemas/sysNetIpv4Broadcast'
        netmask:
          $ref: '#/components/schemas/sysNetIpv4Netmask'
        network:
          $ref: '#/components/schemas/sysNetIpv4Network'
        gateway:
          $ref: '#/components/schemas/sysNetIpv4Gateway'
    sysNetNtpServerItemAddress:
      type: string
    sysNetNtpServerItemName:
      type: string
    sysNetNtpServerItemState:
      type: string
    sysNetNtpServerItemWeight:
      type: integer
    sysNetNtpServerItemTrustLevel:
      type: integer
    sysNetNtpServerItemStratum:
      type: integer
    sysNetNtpServerItemNextPoll:
      type: integer
    sysNetNtpServerItemPollInterval:
      type: integer
    sysNetNtpServerItemOffset:
      type: number
    sysNetNtpServerItemDelay:
      type: number
    sysNetNtpServerItemJitter:
      type: number
    sysNetNtpServerItem:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/sysNetNtpServerItemAddress'
        name:
          $ref: '#/components/schemas/sysNetNtpServerItemName'
        state:
          $ref: '#/components/schemas/sysNetNtpServerItemState'
        weight:
          $ref: '#/components/schemas/sysNetNtpServerItemWeight'
        trust_level:
          $ref: '#/components/schemas/sysNetNtpServerItemTrustLevel'
        stratum:
          $ref: '#/components/schemas/sysNetNtpServerItemStratum'
        next_poll:
          $ref: '#/components/schemas/sysNetNtpServerItemNextPoll'
        poll_interval:
          $ref: '#/components/schemas/sysNetNtpServerItemPollInterval'
        offset:
          $ref: '#/components/schemas/sysNetNtpServerItemOffset'
        delay:
          $ref: '#/components/schemas/sysNetNtpServerItemDelay'
        jitter:
          $ref: '#/components/schemas/sysNetNtpServerItemJitter'
    sysNetNtpServer:
      type: array
      items:
        $ref: '#/components/schemas/sysNetNtpServerItem'
    sysNetNtp:
      type: object
      properties:
        server:
          $ref: '#/components/schemas/sysNetNtpServer'
    sysNetWlanApItemBssid:
      type: string
    sysNetWlanApItemFlags:
      type: string
    sysNetWlanApItemFrequency:
      type: string
    sysNetWlanApItemSignalLevel:
      type: string
    sysNetWlanApItemSsid:
      type: string
    sysNetWlanApItem:
      type: object
      properties:
        bssid:
          $ref: '#/components/schemas/sysNetWlanApItemBssid'
        flags:
          $ref: '#/components/schemas/sysNetWlanApItemFlags'
        frequency:
          $ref: '#/components/schemas/sysNetWlanApItemFrequency'
        signal_level:
          $ref: '#/components/schemas/sysNetWlanApItemSignalLevel'
        ssid:
          $ref: '#/components/schemas/sysNetWlanApItemSsid'
    sysNetWlanAp:
      type: array
      items:
        $ref: '#/components/schemas/sysNetWlanApItem'
    sysNetWlanNetItemNetworkId:
      type: string
    sysNetWlanNetItemBssid:
      type: string
    sysNetWlanNetItemFlags:
      type: string
    sysNetWlanNetItemSsid:
      type: string
    sysNetWlanNetItem:
      type: object
      properties:
        network_id:
          $ref: '#/components/schemas/sysNetWlanNetItemNetworkId'
        bssid:
          $ref: '#/components/schemas/sysNetWlanNetItemBssid'
        flags:
          $ref: '#/components/schemas/sysNetWlanNetItemFlags'
        ssid:
          $ref: '#/components/schemas/sysNetWlanNetItemSsid'
    sysNetWlanNet:
      type: array
      items:
        $ref: '#/components/schemas/sysNetWlanNetItem'
    sysNetWlan:
      type: object
      properties:
        ap:
          $ref: '#/components/schemas/sysNetWlanAp'
        net:
          $ref: '#/components/schemas/sysNetWlanNet'
    sysNet:
      type: object
      properties:
        ipv4:
          $ref: '#/components/schemas/sysNetIpv4'
        ntp:
          $ref: '#/components/schemas/sysNetNtp'
        wlan:
          $ref: '#/components/schemas/sysNetWlan'
    sysReboot:
      type: boolean
    sysSn:
      type: string
    sysStatusTokenArgsItem:
      type: string
    sysStatusTokenArgs:
      type: array
      items:
        $ref: '#/components/schemas/sysStatusTokenArgsItem'
    sysStatusTokenDone:
      type: boolean
    sysStatusTokenError:
      type: string
    sysStatusTokenInfo:
      type: string
    sysStatusTokenProgress:
      type: number
    sysStatusTokenTs:
      type: string
    sysStatusToken:
      type: object
      properties:
        args:
          $ref: '#/components/schemas/sysStatusTokenArgs'
        done:
          $ref: '#/components/schemas/sysStatusTokenDone'
        error:
          $ref: '#/components/schemas/sysStatusTokenError'
        info:
          $ref: '#/components/schemas/sysStatusTokenInfo'
        progress:
          $ref: '#/components/schemas/sysStatusTokenProgress'
        ts:
          $ref: '#/components/schemas/sysStatusTokenTs'
    sysStatus:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/sysStatusToken'
    sysTime:
      type: string
    sysUptime:
      type: number
    sysVersionFirmware:
      type: string
    sysVersionKernel:
      type: string
    sysVersion:
      type: object
      properties:
        firmware:
          $ref: '#/components/schemas/sysVersionFirmware'
        kernel:
          $ref: '#/components/schemas/sysVersionKernel'
    sys:
      type: object
      properties:
        alert:
          $ref: '#/components/schemas/sysAlert'
        boot:
          $ref: '#/components/schemas/sysBoot'
        db:
          $ref: '#/components/schemas/sysDb'
        dev:
          $ref: '#/components/schemas/sysDev'
        func:
          $ref: '#/components/schemas/sysFunc'
        modbus:
          $ref: '#/components/schemas/sysModbus'
        model:
          $ref: '#/components/schemas/sysModel'
        net:
          $ref: '#/components/schemas/sysNet'
        reboot:
          $ref: '#/components/schemas/sysReboot'
        sn:
          $ref: '#/components/schemas/sysSn'
        status:
          $ref: '#/components/schemas/sysStatus'
        time:
          $ref: '#/components/schemas/sysTime'
        uptime:
          $ref: '#/components/schemas/sysUptime'
        version:
          $ref: '#/components/schemas/sysVersion'
security:
  - ApiKey: []
